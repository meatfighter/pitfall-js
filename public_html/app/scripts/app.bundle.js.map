{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://pitfall-js/./src/animate.ts","webpack://pitfall-js/./src/app.ts","webpack://pitfall-js/./src/audio.ts","webpack://pitfall-js/./src/death.ts","webpack://pitfall-js/./src/download.ts","webpack://pitfall-js/./src/game/clock.ts","webpack://pitfall-js/./src/game/cobra-and-fire.ts","webpack://pitfall-js/./src/game/dijkstra.ts","webpack://pitfall-js/./src/game/fibonacci-priority-queue.ts","webpack://pitfall-js/./src/game/game-state.ts","webpack://pitfall-js/./src/game/game.ts","webpack://pitfall-js/./src/game/harry.ts","webpack://pitfall-js/./src/game/map.ts","webpack://pitfall-js/./src/game/pit.ts","webpack://pitfall-js/./src/game/rattle.ts","webpack://pitfall-js/./src/game/rolling-log.ts","webpack://pitfall-js/./src/game/scorpion.ts","webpack://pitfall-js/./src/game/stationary-log.ts","webpack://pitfall-js/./src/game/treasure-map.ts","webpack://pitfall-js/./src/game/treasure.ts","webpack://pitfall-js/./src/game/vine-state.ts","webpack://pitfall-js/./src/game/vine.ts","webpack://pitfall-js/./src/graphics.ts","webpack://pitfall-js/./src/input.ts","webpack://pitfall-js/./src/math.ts","webpack://pitfall-js/./src/progress.ts","webpack://pitfall-js/./src/screen.ts","webpack://pitfall-js/./src/start.ts","webpack://pitfall-js/./src/store.ts","webpack://pitfall-js/./src/wake-lock.ts"],"sourcesContent":["import { update } from './game/game';\nimport { render } from './screen';\n\nconst FRAMES_PER_SECOND = 60;\nconst MILLIS_PER_FRAME = 1000 / FRAMES_PER_SECOND;\nconst MAX_UPDATES_WITHOUT_RENDER = 5;\n\nlet animationRunning = false;\nlet frameID = 0;\nlet previousTime = 0;\nlet lagTime = 0;\n\nexport function startAnimation() {\n    if (animationRunning) {\n        return;\n    }\n    animationRunning = true;\n    lagTime = 0;\n    frameID = requestAnimationFrame(renderAndUpdate);\n    previousTime = performance.now();\n}\n\nexport function stopAnimation() {\n    if (!animationRunning) {\n        return;\n    }\n    animationRunning = false;\n    cancelAnimationFrame(frameID);\n}\n\nexport function renderAndUpdate() {\n    if (!animationRunning) {\n        return;\n    }\n\n    frameID = requestAnimationFrame(renderAndUpdate);\n\n    render();\n\n    const currentTime = performance.now();\n    const elapsedTime = currentTime - previousTime;\n    previousTime = currentTime;\n    lagTime += elapsedTime;\n\n    let count = 0;\n    while ((lagTime >= MILLIS_PER_FRAME) && animationRunning) {\n        update();\n        lagTime -= MILLIS_PER_FRAME;\n        if (++count > MAX_UPDATES_WITHOUT_RENDER) {\n            lagTime = 0;\n            previousTime = performance.now();\n            break;\n        }\n    }\n}","import { enter as enterProgress } from \"./progress\";\nimport { enter as enterDeath } from \"./death\";\n\nexport function init() {\n    window.addEventListener('error', e => {\n        console.error(`Caught in global handler: ${e.message}`, {\n            source: e.filename,\n            lineno: e.lineno,\n            colno: e.colno,\n            error: e.error\n        });\n        e.preventDefault();\n        enterDeath();\n    });\n    window.addEventListener('unhandledrejection', e => e.preventDefault());\n    document.addEventListener('dblclick', e => e.preventDefault(), { passive: false });\n\n    enterProgress();\n}","import { JSZipObject } from \"jszip\";\n\nconst audioContext = new AudioContext();\naudioContext.onstatechange = () => {\n    if (audioContext.state === 'suspended') {\n        stopAll();\n    }\n};\n\nlet docVisible = true;\n\ndocument.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n        docVisible = true;\n        if (audioContext.state === 'suspended') {\n            audioContext.resume();\n        }\n    } else if (document.visibilityState === 'hidden') {        \n        docVisible = false;\n        stopAll();\n        if (audioContext.state === 'running') {\n            audioContext.suspend();\n        }\n    }\n});\n\nconst masterGain = audioContext.createGain();\nmasterGain.connect(audioContext.destination);\nmasterGain.gain.value = 0.1;\n\nconst promises: Promise<Map<string, AudioBuffer>>[] = [];\n\nconst audioBuffers = new Map<string, AudioBuffer>();\n\nconst activeSources = new Map<string, AudioBufferSourceNode>();\n\nexport function getVolume() {\n    return 100 * masterGain.gain.value;\n}\n\nexport function setVolume(volume: number) {\n    masterGain.gain.value = volume / 100;\n}\n\nexport function decodeAudioData(name: string, obj: JSZipObject) {\n    promises.push(obj.async('arraybuffer')\n        .then(data => audioContext.decodeAudioData(data))\n        .then(buffer => audioBuffers.set(name, buffer)));\n}\n\nexport async function waitForDecodes() {\n    return Promise.all(promises).then(() => promises.length = 0);\n}\n\nexport function play(name: string, loop = false) {\n    if (audioContext.state === 'suspended') {\n        if (docVisible) {\n            audioContext.resume().then(() => play(name));\n        }\n        return;\n    }\n\n    if (loop) {\n        if (activeSources.has(name)) {\n            return;\n        }\n    } else {\n        stop(name);\n    }\n\n    const source = audioContext.createBufferSource();\n    source.buffer = audioBuffers.get(name) as AudioBuffer;\n    source.connect(masterGain);\n    source.loop = loop;\n\n    activeSources.set(name, source);\n    source.onended = () => activeSources.delete(name);\n\n    source.start();\n}\n\nexport function stop(name: string) {\n    const source = activeSources.get(name);\n    if (source) {\n        activeSources.delete(name);\n        source.stop();\n    }\n}\n\nexport function stopAll() {\n    for (const source of activeSources.values()) {\n        source.stop();\n    }\n    activeSources.clear();\n}","let landscape = false;\n\nexport function enter() {\n    window.addEventListener('resize', windowResized);\n    window.addEventListener('touchmove', onTouchMove, { passive: false });\n\n    const mainElement = document.getElementById('main-content') as HTMLElement;\n    mainElement.innerHTML = '<div id=\"death-div\"><span id=\"fatal-error\">&#x1F480;</span></div>';\n\n    windowResized();\n}\n\nexport function exit() {\n    window.removeEventListener('resize', windowResized);\n    window.removeEventListener('touchmove', onTouchMove);\n}\n\nfunction onTouchMove(e: TouchEvent) {\n    e.preventDefault();\n}\n\nfunction windowResized() {\n    const deathDiv = document.getElementById('death-div') as HTMLDivElement;\n\n    deathDiv.style.top = deathDiv.style.left = deathDiv.style.transform = '';\n    deathDiv.style.display = 'none';\n\n    const innerWidth = window.innerWidth;\n    const innerHeight = window.innerHeight;\n    landscape = (innerWidth >= innerHeight);\n    deathDiv.style.display = 'flex';\n\n    if (landscape) {\n        const rect = deathDiv.getBoundingClientRect();\n        deathDiv.style.left = `${(innerWidth - rect.width) / 2}px`\n        deathDiv.style.top = `${(innerHeight - rect.height) / 2}px`;\n    } else {\n        deathDiv.style.transform = 'rotate(-90deg)';\n        const rect = deathDiv.getBoundingClientRect();\n        deathDiv.style.left = `${(innerWidth - rect.height) / 2}px`\n        deathDiv.style.top = `${(innerHeight - rect.width) / 2}px`;\n    }\n}","const MAX_FETCH_RETRIES = 5;\n\nexport type ProgressListener = (frac: number) => void;\n\nexport async function download(url: string, progressListener: ProgressListener) {\n    for (let i = MAX_FETCH_RETRIES - 1; i >= 0; --i) {\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                continue;\n            }\n            const contentLengthStr = response.headers.get('Content-Length');\n            if (!contentLengthStr) {\n                continue;\n            }\n            const contentLength = parseInt(contentLengthStr);\n            if (isNaN(contentLength) || contentLength <= 0) {\n                continue;\n            }\n            const body = response.body;\n            if (body === null) {\n                continue;\n            }\n\n            const reader = body.getReader();\n            const chunks = [];\n            let bytesReceived = 0;\n            while (true) {\n                const { done, value: chunk } = await reader.read();\n                if (done) {\n                    break;\n                }\n                chunks.push(chunk);\n                bytesReceived += chunk.length;\n                progressListener(bytesReceived / contentLength);\n            }\n\n            const uint8Array = new Uint8Array(bytesReceived);\n            let position = 0;\n            chunks.forEach(chunk => {\n                uint8Array.set(chunk, position);\n                position += chunk.length;\n            });\n            return uint8Array;\n        } catch (error) {\n            if (i === 0) {\n                throw error;\n            }\n        }\n    }\n    throw new Error(\"Failed to fetch.\");\n}","import { printNumber, Colors, charSprites } from '@/graphics';\nimport { store, Difficulty } from '@/store';\n\nexport class Clock {\n\n    minutes: number;\n    seconds: number;\n    frames: number;\n    timeUp: boolean;\n\n    constructor(clock: {\n        minutes: number;\n        seconds: number;\n        frames: number;\n        timeUp: boolean;\n    } = {\n        minutes: (store.difficulty === Difficulty.EASY) ? 22 : (store.difficulty === Difficulty.NORMAL) ? 21 : 20,\n        seconds: 0,\n        frames: 59,\n        timeUp: false,\n    }) {                \n        this.minutes = clock.minutes;\n        this.seconds = clock.seconds;\n        this.frames = clock.frames;\n        this.timeUp = clock.timeUp;\n    }\n   \n    update() {\n        if (this.minutes === 0 && this.seconds === 0 && this.frames === 0) {\n            this.timeUp = true;\n            return;\n        }\n\n        if (--this.frames >= 0) {\n            return;\n        }\n\n        this.frames = 59;\n\n        if (--this.seconds >= 0) {\n            return;\n        }\n\n        this.seconds = 59;\n\n        --this.minutes;\n    }\n\n    render(ctx: OffscreenCanvasRenderingContext2D) {\n        printNumber(ctx, this.minutes, 29, 16, Colors.OFF_WHITE);\n        ctx.drawImage(charSprites[Colors.OFF_WHITE][10], 37, 16);\n        printNumber(ctx, this.seconds, 53, 16, Colors.OFF_WHITE, 2);\n    }\n}","import { GameState } from './game-state';\nimport { cobraSprites, cobraMasks, fireSprites, fireMasks, Mask, Sprite } from '@/graphics';\nimport { map, ObsticleType } from './map';\n\nexport class CobraAndFire {\n\n    constructor(_: { } = { }) {\n    }\n\n    update(gs: GameState) {\n        let mask: Mask;\n        switch (map[gs.harry.scene].obsticles) {\n            case ObsticleType.COBRA:\n                mask = cobraMasks[gs.sceneStates[gs.harry.scene].enteredLeft ? 0 : 1][gs.rattle.getValue()];\n                break;\n            case ObsticleType.FIRE:\n                mask = fireMasks[gs.rattle.getValue()];\n                break;\n            default:\n                return;    \n        }\n\n        if (gs.harry.intersects(mask, 108, 111)) {\n            gs.harry.injure();\n        }\n    }\n\n    render(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, scene: number, ox: number) {\n        let sprite: Sprite;\n        switch (map[scene].obsticles) {\n            case ObsticleType.COBRA:\n                sprite = cobraSprites[gs.sceneStates[scene].enteredLeft ? 0 : 1][gs.rattle.getValue()];\n                break;\n            case ObsticleType.FIRE:\n                sprite = fireSprites[gs.rattle.getValue()];\n                break;\n            default:\n                return;    \n        }\n\n        ctx.drawImage(sprite, 108 - ox, 111);\n    }\n}","import { FibonacciPriorityQueue, FibNode } from './fibonacci-priority-queue';\r\n\r\n/** \r\n * An interface to describe edges in the graph. \r\n * Each node can point to any number of neighbors, each with a given weight.\r\n */\r\nexport interface Edge<T> {\r\n    node: T;\r\n    weight: number;\r\n}\r\n\r\n/**\r\n * Dijkstra's algorithm that computes:\r\n * 1) The distance to the seed node for every node in the graph.\r\n * 2) The immediate neighbor to follow to reach the seed.\r\n *\r\n * @param graph A Map whose keys are nodes and whose values are an array of edges.\r\n * @param seed The seed node from which all distances are calculated.\r\n * @returns A Map<T, { distance: number; link: T | null }> describing each node's\r\n *          distance and the neighbor to go to first on route to the seed.\r\n */\r\nexport function dijkstra<T>(graph: Map<T, Edge<T>[]>, seed: T): Map<T, { distance: number; link: T | null }> {\r\n\r\n    // Store the best-known distance for each node and the link to the first step back to seed\r\n    const distances = new Map<T, number>();\r\n    const firstStepLink = new Map<T, T | null>();\r\n\r\n    // Priority queue to pick the node with the smallest distance\r\n    const pq = new FibonacciPriorityQueue<T>();\r\n\r\n    // We need to keep track of the FibNode handles to decrease their priorities later\r\n    const nodeHandles = new Map<T, FibNode<T>>();\r\n\r\n    // Initialize all nodes\r\n    for (const node of graph.keys()) {\r\n        distances.set(node, Number.POSITIVE_INFINITY);\r\n        firstStepLink.set(node, null);\r\n\r\n        // Add to Fibonacci priority queue with an initially large priority\r\n        const handle = pq.add(node, Number.POSITIVE_INFINITY);\r\n        nodeHandles.set(node, handle);\r\n    }\r\n\r\n    // Set the seed node's distance to 0 and update priority\r\n    distances.set(seed, 0);\r\n    pq.decreasePriority(nodeHandles.get(seed)!, 0);\r\n\r\n    // Dijkstra's main loop\r\n    while (pq.size() > 0) {\r\n        // Extract node with the smallest distance\r\n        const fibNode = pq.extractMin();\r\n        if (!fibNode) break; // No more nodes\r\n\r\n        const currentNode = fibNode.key;\r\n        const currentDistance = distances.get(currentNode)!;\r\n\r\n        // Explore each neighbor\r\n        const edges = graph.get(currentNode) || [];\r\n        for (const { node: neighbor, weight } of edges) {\r\n            const alt = currentDistance + weight;\r\n            if (alt < distances.get(neighbor)!) {\r\n                // Found a better route to neighbor\r\n                distances.set(neighbor, alt);\r\n                firstStepLink.set(neighbor, currentNode);\r\n                pq.decreasePriority(nodeHandles.get(neighbor)!, alt);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Build the final map with distance and link\r\n    const result = new Map<T, { distance: number; link: T | null }>();\r\n    for (const node of graph.keys()) {\r\n        result.set(node, {\r\n            distance: distances.get(node)!,\r\n            link: firstStepLink.get(node)!,\r\n        });\r\n    }\r\n    return result;\r\n}\r\n","export class FibNode<T> {\r\n    public key: T;\r\n    public priority: number;\r\n    public degree: number;\r\n    public parent: FibNode<T> | null;\r\n    public child: FibNode<T> | null;\r\n    public left: FibNode<T>;\r\n    public right: FibNode<T>;\r\n    public mark: boolean;\r\n\r\n    constructor(key: T, priority: number) {\r\n        this.key = key;\r\n        this.priority = priority;\r\n        this.degree = 0;\r\n        this.parent = null;\r\n        this.child = null;\r\n        this.left = this;\r\n        this.right = this;\r\n        this.mark = false;\r\n    }\r\n}\r\n\r\nexport class FibonacciPriorityQueue<T> {\r\n    private min: FibNode<T> | null;\r\n    private nodeCount: number;\r\n\r\n    constructor() {\r\n        this.min = null;\r\n        this.nodeCount = 0;\r\n    }\r\n\r\n    /**\r\n     * Inserts a new node with the given key and priority.\r\n     * Returns the newly created node.\r\n     */\r\n    public add(key: T, priority: number): FibNode<T> {\r\n        const node = new FibNode<T>(key, priority);\r\n\r\n        // Merge this node into the root list\r\n        if (!this.min) {\r\n            this.min = node;\r\n        } else {\r\n            // Insert into the min's right position\r\n            node.left = this.min;\r\n            node.right = this.min.right;\r\n            if (this.min.right) {\r\n                this.min.right.left = node;\r\n            }\r\n            this.min.right = node;\r\n\r\n            // Update min if necessary\r\n            if (node.priority < this.min.priority) {\r\n                this.min = node;\r\n            }\r\n        }\r\n\r\n        this.nodeCount++;\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * Extracts the node with the smallest priority.\r\n     * Returns the extracted node, or null if empty.\r\n     */\r\n    public extractMin(): FibNode<T> | null {\r\n        const z = this.min;\r\n        if (!z) {\r\n            return null;\r\n        }\r\n\r\n        // Move each child of z into the root list\r\n        if (z.child) {\r\n            let child = z.child;\r\n            do {\r\n                const nextChild = child.right;\r\n                // Remove child from its sibling list\r\n                child.left.right = child.right;\r\n                child.right.left = child.left;\r\n                // Add child to the root list\r\n                child.left = this.min!;\r\n                child.right = this.min!.right;\r\n                if (this.min!.right) {\r\n                    this.min!.right.left = child;\r\n                }\r\n                this.min!.right = child;\r\n                child.parent = null;\r\n                child = nextChild;\r\n            } while (child !== z.child);\r\n        }\r\n\r\n        // Remove z from the root list\r\n        z.left.right = z.right;\r\n        z.right.left = z.left;\r\n\r\n        if (z === z.right) {\r\n            this.min = null;\r\n        } else {\r\n            this.min = z.right;\r\n            this.consolidate();\r\n        }\r\n\r\n        this.nodeCount--;\r\n        return z;\r\n    }\r\n\r\n    /**\r\n     * Decreases the priority of a given node to newPriority.\r\n     * Assumes newPriority is strictly less than the node's current priority.\r\n     */\r\n    public decreasePriority(node: FibNode<T>, newPriority: number): void {\r\n        if (newPriority > node.priority) {\r\n            throw new Error('New priority must be lower than the current priority.');\r\n        }\r\n\r\n        node.priority = newPriority;\r\n        const parent = node.parent;\r\n        if (parent && node.priority < parent.priority) {\r\n            this.cut(node, parent);\r\n            this.cascadingCut(parent);\r\n        }\r\n\r\n        // Update min if needed\r\n        if (this.min && node.priority < this.min.priority) {\r\n            this.min = node;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Private method to merge the trees of the heap by degree.\r\n     * Called after extracting the minimum.\r\n     */\r\n    private consolidate() {\r\n        const A: Array<FibNode<T> | null> = [];\r\n        // Upper bound on degrees\r\n        const maxDegree = Math.floor(Math.log2(this.nodeCount)) + 2;\r\n        for (let i = 0; i < maxDegree; i++) {\r\n            A[i] = null;\r\n        }\r\n\r\n        // Collect all root nodes in a list\r\n        const roots: FibNode<T>[] = [];\r\n        if (this.min) {\r\n            let node: FibNode<T> = this.min;\r\n            do {\r\n                roots.push(node);\r\n                node = node.right;\r\n            } while (node !== this.min);\r\n        }\r\n\r\n        // For each root, merge with same degree\r\n        for (const w of roots) {\r\n            let x = w;\r\n            let d = x.degree;\r\n            while (A[d]) {\r\n                let y = A[d]!;\r\n                if (x.priority > y.priority) {\r\n                    // Swap x and y\r\n                    [x, y] = [y, x];\r\n                }\r\n                this.link(y, x);\r\n                A[d] = null;\r\n                d++;\r\n            }\r\n            A[d] = x;\r\n        }\r\n\r\n        // Rebuild the root list\r\n        this.min = null;\r\n        for (const node of A) {\r\n            if (node) {\r\n                if (!this.min) {\r\n                    this.min = node;\r\n                    node.left = node;\r\n                    node.right = node;\r\n                } else {\r\n                    // Insert node into root list\r\n                    node.left = this.min;\r\n                    node.right = this.min.right;\r\n                    if (this.min.right) {\r\n                        this.min.right.left = node;\r\n                    }\r\n                    this.min.right = node;\r\n                    if (node.priority < this.min.priority) {\r\n                        this.min = node;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Private method to make node y a child of node x.\r\n     */\r\n    private link(y: FibNode<T>, x: FibNode<T>): void {\r\n        // Remove y from the root list\r\n        y.left.right = y.right;\r\n        y.right.left = y.left;\r\n        // Make y a child of x\r\n        y.parent = x;\r\n        if (!x.child) {\r\n            x.child = y;\r\n            y.left = y;\r\n            y.right = y;\r\n        } else {\r\n            y.left = x.child;\r\n            y.right = x.child.right;\r\n            if (x.child.right) {\r\n                x.child.right.left = y;\r\n            }\r\n            x.child.right = y;\r\n        }\r\n        x.degree++;\r\n        y.mark = false;\r\n    }\r\n\r\n    /**\r\n     * Private method to cut a node from its parent and move it to the root list.\r\n     */\r\n    private cut(x: FibNode<T>, y: FibNode<T>): void {\r\n        // Remove x from child list of y\r\n        if (x.right === x) {\r\n            y.child = null;\r\n        } else {\r\n            x.left.right = x.right;\r\n            x.right.left = x.left;\r\n            if (y.child === x) {\r\n                y.child = x.right;\r\n            }\r\n        }\r\n        y.degree--;\r\n\r\n        // Add x to root list\r\n        x.left = this.min!;\r\n        x.right = this.min!.right;\r\n        if (this.min!.right) {\r\n            this.min!.right.left = x;\r\n        }\r\n        this.min!.right = x;\r\n\r\n        x.parent = null;\r\n        x.mark = false;\r\n    }\r\n\r\n    /**\r\n     * Private method for recursively cutting marked parents.\r\n     */\r\n    private cascadingCut(y: FibNode<T>): void {\r\n        const z = y.parent;\r\n        if (z) {\r\n            if (!y.mark) {\r\n                y.mark = true;\r\n            } else {\r\n                this.cut(y, z);\r\n                this.cascadingCut(z);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the number of elements in the queue.\r\n     */\r\n    public size(): number {\r\n        return this.nodeCount;\r\n    }\r\n\r\n    /**\r\n     * Peeks at the minimum node without removing it.\r\n     */\r\n    public peekMin(): FibNode<T> | null {\r\n        return this.min;\r\n    }\r\n}\r\n","import { store, saveStore, Difficulty } from '@/store';\nimport { Harry } from './harry';\nimport { Scorpion } from './scorpion';\nimport { Vine } from './vine';\nimport { Pit } from './pit';\nimport { RollingLog } from './rolling-log';\nimport { StationaryLog } from './stationary-log';\nimport { Rattle } from './rattle';\nimport { CobraAndFire } from './cobra-and-fire';\nimport { Treasure } from './treasure';\nimport { Clock } from './clock';\nimport { map, TreasureType } from './map';\nimport { Colors } from '@/graphics';\n\nexport class SceneState {\n\n    enteredLeft = true;\n    treasure: TreasureType;\n\n    constructor(sceneState: {\n        enteredLeft: boolean;\n        treasure: TreasureType;\n    } = {\n        enteredLeft: true,\n        treasure: TreasureType.NONE,\n    }) {\n        this.enteredLeft = sceneState.enteredLeft;\n        this.treasure = sceneState.treasure;\n    }\n}\n\nexport class GameState {\n\n    sceneStates: SceneState[];\n    harry: Harry;\n    scorpion: Scorpion;\n    vine: Vine;\n    pit: Pit;\n    rollingLog: RollingLog;\n    stationaryLog: StationaryLog;\n    rattle: Rattle;\n    cobraAndFire: CobraAndFire;\n    treasure: Treasure;\n    clock: Clock;\n    scrollX: number;\n    lastScrollX: number;\n    ox: number;\n    lastOx: number;\n    nextOx: number;\n    nextScene: number;\n    lastNextScene: number;\n    lastHarryUnderground: boolean;\n    sceneAlpha: number;\n    score: number;\n    extraLives: number;\n    gameOver: boolean;\n    gameOverDelay: number;\n    newHighScore: boolean;\n    scoreColor: number;\n    treasureCount: number;\n    treasureMapIndex: number;\n\n    constructor(gameState: {\n        sceneStates: SceneState[] | undefined;\n        harry: Harry | undefined;\n        scorpion: Scorpion | undefined;\n        vine: Vine | undefined;\n        pit: Pit | undefined;\n        rollingLog: RollingLog | undefined;\n        stationaryLog: StationaryLog | undefined;\n        rattle: Rattle | undefined;\n        cobraAndFire: CobraAndFire | undefined;\n        treasure: Treasure | undefined;\n        clock: Clock | undefined;\n        scrollX: number;\n        lastScrollX: number;\n        ox: number;\n        lastOx: number;\n        nextOx: number;\n        nextScene: number;\n        lastNextScene: number;\n        lastHarryUnderground: boolean;\n        sceneAlpha: number;\n        score: number;\n        extraLives: number;\n        gameOver: boolean;\n        gameOverDelay: number;\n        newHighScore: boolean;\n        scoreColor: number;\n        treasureCount: number;\n        treasureMapIndex: number;\n    } = {\n        sceneStates: undefined,\n        harry: undefined,\n        scorpion: undefined,\n        vine: undefined,\n        pit: undefined,\n        rollingLog: undefined,\n        stationaryLog: undefined,\n        rattle: undefined,\n        cobraAndFire: undefined,\n        treasure: undefined,\n        clock: undefined,\n        scrollX: 4,\n        lastScrollX: 4,\n        ox: 0,\n        lastOx: 0,\n        nextOx: 0,\n        nextScene: 0,\n        lastNextScene: 0,\n        lastHarryUnderground: false,\n        sceneAlpha: 1,\n        score: 2000,\n        extraLives: (store.difficulty === Difficulty.EASY) ? 4 : (store.difficulty === Difficulty.NORMAL) ? 3 : 2,\n        gameOver: false,\n        gameOverDelay: 180,\n        newHighScore: false,\n        scoreColor: Colors.OFF_WHITE,\n        treasureCount: 0,\n        treasureMapIndex: 0,\n    }) {\n        this.sceneStates = new Array<SceneState>(map.length);\n        if (gameState.sceneStates?.length === map.length) {\n            for (let i = map.length - 1; i >= 0; --i) {\n                this.sceneStates[i] = new SceneState(gameState.sceneStates[i]);\n            }\n        } else {            \n            for (let i = map.length - 1; i >= 0; --i) {\n                this.sceneStates[i] = new SceneState({ enteredLeft: true, treasure: map[i].treasure, });\n            }\n        }\n\n        this.harry = new Harry(gameState.harry);\n        this.scorpion = new Scorpion(gameState.scorpion);\n        this.vine = new Vine(gameState.vine);\n        this.pit = new Pit(gameState.pit);\n        this.rollingLog = new RollingLog(gameState.rollingLog);\n        this.stationaryLog = new StationaryLog(gameState.stationaryLog);\n        this.rattle = new Rattle(gameState.rattle);\n        this.cobraAndFire = new CobraAndFire(gameState.cobraAndFire);\n        this.treasure = new Treasure(gameState.treasure);\n        this.clock = new Clock(gameState.clock);\n        this.scrollX = gameState.scrollX;\n        this.lastScrollX = gameState.lastScrollX;\n        this.ox = gameState.ox;\n        this.lastOx = gameState.lastOx;\n        this.nextOx = gameState.nextOx;\n        this.nextScene = gameState.nextScene;\n        this.lastNextScene = gameState.lastNextScene;\n        this.lastHarryUnderground = gameState.lastHarryUnderground;\n        this.sceneAlpha = gameState.sceneAlpha;\n        this.score = gameState.score;\n        this.extraLives = gameState.extraLives;\n        this.gameOver = gameState.gameOver;\n        this.gameOverDelay = gameState.gameOverDelay;\n        this.newHighScore = gameState.newHighScore;\n        this.scoreColor = gameState.scoreColor;\n        this.treasureCount = gameState.treasureCount;;\n        this.treasureMapIndex = gameState.treasureMapIndex;\n    }\n\n    endGame() {\n        this.gameOver = true;\n        this.gameOverDelay = (this.treasureCount === 32) ? 600 : 180;\n        store.gameState = undefined;\n        if (this.score > store.highScores[store.difficulty]) {\n            this.newHighScore = true;\n            store.highScores[store.difficulty] = this.score;                        \n        }        \n    }\n}","import { map, WallType, PitType, ObsticleType, TreasureType } from './map';\nimport { GameState } from './game-state';\nimport { colors, Colors, Resolution, leavesSprites, branchesSprite, wallSprite, printNumber, charSprites, arrowSprites } \n    from '@/graphics';\nimport { clamp } from '@/math';\nimport { updateInput, upJustPressed, downJustPressed, leftJustPressed, rightJustPressed, jumpJustPressed } \n    from '@/input';\nimport { Tier, treasureCells, updateTreasureMapIndex, Direction } from './treasure-map';\nimport { store, Difficulty } from '@/store';    \n\nconst SCENE_ALPHA_DELTA = 1 / 30;\n\nconst MIN_SCROLL_DELTA = .5;\nconst SCROLL_MARGIN = 4;\n\nconst TRUNKS = [\n    [ 0, 32, 92, 124 ],\n    [ 8, 40, 84, 116 ],\n    [ 16, 48, 76, 108 ],\n    [ 20, 52, 72, 104 ],\n];\n\nlet gs: GameState;\n\nexport function initGame() {\n    store.gameState = gs = new GameState(store.gameState);\n    updateTreasureMapIndex(gs);\n}\n\nexport function update() {\n    updateInput(gs);\n\n    if (gs.gameOver) {\n        if (gs.newHighScore) {\n            gs.scoreColor = (gs.scoreColor + 1) & 0xFF;\n        }\n        if (gs.gameOverDelay > 0) {\n            --gs.gameOverDelay;\n            return;\n        }\n        if (upJustPressed || downJustPressed || leftJustPressed || rightJustPressed || jumpJustPressed) {\n            initGame();\n        }\n        return;\n    }\n\n    gs.harry.teleported = false;\n\n    const scene0 = gs.harry.scene;\n    const scene1 = gs.nextScene;\n\n    if (!gs.harry.isInjured()) {\n        gs.clock.update();\n        gs.rattle.update();\n        gs.cobraAndFire.update(gs);\n        gs.treasure.update(gs);\n        gs.scorpion.update(gs);\n        gs.vine.update(gs);\n        gs.pit.update(gs);\n        gs.rollingLog.update(gs);\n        gs.stationaryLog.update(gs);\n        if (gs.sceneAlpha < 1) {\n            gs.sceneAlpha += SCENE_ALPHA_DELTA;\n            if (gs.sceneAlpha > 1) {\n                gs.sceneAlpha = 1;\n            }\n        }\n    } \n   \n    gs.harry.update(gs);\n\n    const underground = gs.harry.isUnderground();\n    if (gs.lastHarryUnderground !== underground) {\n        gs.lastHarryUnderground = underground;\n        gs.lastNextScene = gs.nextScene;\n        gs.sceneAlpha = clamp(1 - gs.sceneAlpha, 0, 1);\n    }\n\n    const targetScrollX = Math.floor(gs.harry.absoluteX);\n    if (targetScrollX < gs.scrollX - SCROLL_MARGIN) {\n        if (gs.lastScrollX === targetScrollX || gs.harry.teleported) {\n            gs.scrollX -= MIN_SCROLL_DELTA;\n        } else {            \n            gs.scrollX -= Math.max(MIN_SCROLL_DELTA, gs.lastScrollX - targetScrollX);\n        }\n    } else if (targetScrollX > gs.scrollX + SCROLL_MARGIN) {\n        if (gs.lastScrollX === targetScrollX || gs.harry.teleported) {\n            gs.scrollX += MIN_SCROLL_DELTA;\n        } else {\n            gs.scrollX += Math.max(MIN_SCROLL_DELTA, targetScrollX - gs.lastScrollX);\n        }\n    }    \n    gs.lastScrollX = targetScrollX;\n    gs.ox = Math.floor(gs.harry.x) - 68 + Math.floor(gs.scrollX) - targetScrollX;\n\n    if (gs.lastOx !== gs.ox) {\n        gs.rollingLog.sync();\n        gs.lastOx = gs.ox;\n    }\n\n    if (gs.ox < 0) {\n        gs.nextOx = gs.ox + Resolution.WIDTH;        \n        gs.nextScene = gs.harry.scene - (underground ? 3 : 1);\n        if (gs.nextScene < 0) {\n            gs.nextScene += map.length;\n        }\n        if (gs.nextScene !== scene0 && gs.nextScene !== scene1) {\n            gs.sceneStates[gs.nextScene].enteredLeft = false;\n        }\n    } else {\n        gs.nextOx = gs.ox - Resolution.WIDTH;\n        gs.nextScene = gs.harry.scene + (underground ? 3 : 1);\n        if (gs.nextScene >= map.length) {\n            gs.nextScene -= map.length;\n        }\n        if (gs.nextScene !== scene0 && gs.nextScene !== scene1) {\n            gs.sceneStates[gs.nextScene].enteredLeft = true;\n        }\n    }\n}\n\nfunction renderStrips(ctx: OffscreenCanvasRenderingContext2D) {\n    ctx.fillStyle = colors[Colors.GREEN];\n    ctx.fillRect(0, 51, Resolution.WIDTH, 60);\n    ctx.fillStyle = colors[Colors.LIGHT_YELLOW];\n    ctx.fillRect(0, 111, Resolution.WIDTH, 16);\n    ctx.fillStyle = colors[Colors.DARK_YELLOW];\n    ctx.fillRect(0, 127, Resolution.WIDTH, 15);\n    ctx.fillRect(0, 174, Resolution.WIDTH, 6);\n    ctx.fillStyle = colors[Colors.BLACK];\n    ctx.fillRect(0, 142, Resolution.WIDTH, 32);\n}\n\nfunction renderBackground(ctx: OffscreenCanvasRenderingContext2D, scene: number, ox: number) {\n    const { trees, ladder, holes, wall, vine, pit, obsticles, scorpion } = map[scene];\n    const trunks = TRUNKS[trees];\n\n    if (store.difficulty === Difficulty.EASY) {\n        const cells = treasureCells[gs.treasureMapIndex][scene];\n        ctx.drawImage(arrowSprites[Tier.UPPER][cells[Tier.UPPER].direction], 60 - ox, 75);\n        const lowerDirection = cells[Tier.LOWER].direction;\n        let lowerOffset: number;\n        switch (wall) {\n            case WallType.LEFT:\n                lowerOffset = (lowerDirection === Direction.RIGHT || lowerDirection === Direction.LEFT) ? 52 : 53;\n                break;\n            case WallType.RIGHT:\n                lowerOffset = 68;\n                break;    \n            default:\n                lowerOffset = 60;\n                break;\n        }\n        ctx.drawImage(arrowSprites[Tier.LOWER][cells[Tier.LOWER].direction], lowerOffset - ox, 150);\n    }\n    \n    ctx.fillStyle = colors[Colors.DARK_BROWN];\n    for (let i = 3; i >= 0; --i) {\n        ctx.drawImage(branchesSprite, trunks[i] - 2 - ox, 51);\n        ctx.fillRect(trunks[i] - ox, 59, 4, 52);\n    }\n\n    if (ladder) {\n        ctx.fillStyle = colors[Colors.BLACK];\n        ctx.fillRect(60 - ox, 116, 8, 6);\n        ctx.fillRect(60 - ox, 127, 8, 15);\n        ctx.fillStyle = colors[Colors.DARK_YELLOW];\n        for (let i = 10, y = 130; i >= 0; --i, y += 4) {\n            ctx.fillRect(62 - ox, y, 4, 2);\n        }\n    }\n\n    if (holes) {\n        ctx.fillStyle = colors[Colors.BLACK];\n        ctx.fillRect(32 - ox, 116, 12, 6);\n        ctx.fillRect(32 - ox, 127, 12, 15);\n        ctx.fillRect(84 - ox, 116, 12, 6);\n        ctx.fillRect(84 - ox, 127, 12, 15);\n    }\n\n    switch(wall) {\n        case WallType.LEFT:\n            ctx.drawImage(wallSprite, 2 - ox, 142);\n            ctx.drawImage(wallSprite, 2 - ox, 158);\n            break;\n        case WallType.RIGHT:\n            ctx.drawImage(wallSprite, 120 - ox, 142);\n            ctx.drawImage(wallSprite, 120 - ox, 158);\n            break;\n    }\n\n    if (scorpion) {\n        gs.scorpion.render(gs, ctx, ox);\n    }\n\n    if (vine) {\n        gs.vine.render(gs, ctx, ox);\n    }\n\n    if (pit !== PitType.NONE) {\n        gs.pit.render(gs, ctx, scene, ox);\n    }\n\n    if (gs.sceneStates[scene].treasure !== TreasureType.NONE) {\n        gs.treasure.render(gs, ctx, scene, ox);\n    }\n\n    switch (obsticles) {\n        case ObsticleType.ONE_ROLLING_LOG:\n        case ObsticleType.TWO_ROLLING_LOGS_NEAR:\n        case ObsticleType.TWO_ROLLING_LOGS_FAR:\n        case ObsticleType.THREE_ROLLING_LOGS:\n            gs.rollingLog.render(gs, ctx, scene, ox);\n            break;\n            \n        case ObsticleType.ONE_STATIONARY_LOG:\n        case ObsticleType.THREE_STATIONARY_LOGS:\n            gs.stationaryLog.render(gs, ctx, scene, ox);\n            break;        \n\n        case ObsticleType.COBRA:\n        case ObsticleType.FIRE:\n            gs.cobraAndFire.render(gs, ctx, scene, ox);\n            break;    \n    }\n}\n\nfunction renderLeaves(ctx: OffscreenCanvasRenderingContext2D, scene: number, ox: number) {\n    const { trees } = map[scene];\n    ctx.fillStyle = colors[Colors.DARK_GREEN];\n    ctx.fillRect(0, 0, Resolution.WIDTH, 51);\n    for (let i = 1; i < 5; ++i) {\n        ctx.drawImage(leavesSprites[(i & 1) ^ 1][trees], ((i - 1) << 5) - ox, 51, 32, 8);\n    }\n    ctx.drawImage(leavesSprites[0][trees], 0, 0, 2, 4, 128 - ox, 51, 8, 8);\n}\n\nfunction renderHUD(ctx: OffscreenCanvasRenderingContext2D) {\n    printNumber(ctx, gs.score, 45, 3, gs.scoreColor);\n    gs.clock.render(ctx);\n    ctx.fillStyle = colors[Colors.OFF_WHITE];\n    for (let i = gs.extraLives - 1, x = 5; i >= 0; --i, x += 2) {\n        ctx.fillRect(x, 16, 1, 8);\n    }\n\n    if (store.difficulty !== Difficulty.HARD) {\n        printNumber(ctx, gs.harry.scene + 1, 116, 3, Colors.OFF_WHITE);\n        printNumber(ctx, gs.treasureCount, 92, 16, Colors.OFF_WHITE);\n        const sprites = charSprites[Colors.OFF_WHITE];\n        ctx.drawImage(sprites[10], 100, 16);\n        ctx.drawImage(sprites[3], 108, 16);\n        ctx.drawImage(sprites[2], 116, 16);\n    }\n}\n\nexport function renderScreen(ctx: OffscreenCanvasRenderingContext2D) {\n    \n    renderStrips(ctx);\n\n    renderBackground(ctx, gs.harry.scene, gs.ox);\n    if (gs.sceneAlpha === 1) {\n        renderBackground(ctx, gs.nextScene, gs.nextOx);\n    } else {\n        ctx.globalAlpha = 1 - gs.sceneAlpha;\n        renderBackground(ctx, gs.lastNextScene, gs.nextOx);\n        ctx.globalAlpha = gs.sceneAlpha;\n        renderBackground(ctx, gs.nextScene, gs.nextOx);\n        ctx.globalAlpha = 1;\n    }\n\n    gs.harry.render(gs, ctx, gs.ox);\n\n    renderLeaves(ctx, gs.harry.scene, gs.ox);\n    if (gs.sceneAlpha === 1) {\n        renderLeaves(ctx, gs.nextScene, gs.nextOx);\n    } else {\n        ctx.globalAlpha = 1 - gs.sceneAlpha;\n        renderLeaves(ctx, gs.lastNextScene, gs.nextOx);\n        ctx.globalAlpha = gs.sceneAlpha;\n        renderLeaves(ctx, gs.nextScene, gs.nextOx);\n        ctx.globalAlpha = 1;\n    }\n\n    renderHUD(ctx);\n}","import { harryMasks, harrySprites, Resolution, Mask, vineStates, crocSprites } from '@/graphics';\nimport { GameState } from './game-state';\nimport { \n    leftPressed, leftJustPressed, leftJustReleased,\n    rightPressed, rightJustPressed, rightJustReleased,\n    upPressed, upJustPressed, upJustReleased,\n    downPressed, downJustPressed, downJustReleased,\n    jumpPressed, jumpJustPressed, jumpJustReleased,\n } from '@/input';\nimport { map, WallType } from './map';\nimport { spritesIntersect } from '@/math';\nimport { play, stop } from '@/audio';\n\nconst Y_UPPER_LEVEL = 119;\nconst Y_LOWER_LEVEL = 174;\nconst Y_HOLE_BOTTOM = 157;\n\nconst JUMP_ARC_BASE = 17;\nconst JUMP_ARC_HEIGHT = 11;\n\nconst T = JUMP_ARC_BASE;\nconst G = 2 * JUMP_ARC_HEIGHT / (T * T);\nconst VY0 = -G * T;\n\nconst INJURED_DELAY = 20 // 134;\n\nconst X_SPAWN_MARGIN = 38;\n\nenum MainState {\n    STANDING,\n    FALLING,\n    CLIMBING,\n    INJURED,\n    SWINGING,\n    SINKING,\n    KNEELING,\n    SKIDDING,   \n}\n\nexport class Harry {   \n    mainState: MainState;\n    lastMainState: MainState;\n    scene: number;\n    absoluteX: number;\n    x: number;\n    y: number;\n    vy: number;\n    dir: number;\n    sprite: number;\n    runCounter: number;\n    climbCounter: number;\n    teleported: boolean;\n    injuredCounter: number;\n    tunnelSpawning: boolean;\n    releasedVine: boolean;\n    swallow: boolean;\n    kneeling: boolean;\n    kneelingDelay: boolean;\n    rightTouchMeansDown: boolean;\n    rollingDelay: number;\n\n    constructor(harry: {\n        mainState: MainState;\n        lastMainState: MainState;\n        scene: number;\n        absoluteX: number;\n        x: number;\n        y: number;\n        vy: number;\n        dir: number;\n        sprite: number;\n        runCounter: number;\n        climbCounter: number;\n        teleported: boolean;\n        injuredCounter: number;\n        tunnelSpawning: boolean;\n        releasedVine: boolean;\n        swallow: boolean;\n        kneeling: boolean;\n        kneelingDelay: boolean;\n        rightTouchMeansDown: boolean;\n        rollingDelay: number;\n    } = {\n        mainState: MainState.STANDING,\n        lastMainState: MainState.STANDING,\n        scene: 0,\n        absoluteX: 4,\n        x: 4,\n        y: Y_UPPER_LEVEL,\n        vy: 0,\n        dir: 0,\n        sprite: 0,\n        runCounter: 0,\n        climbCounter: 0,\n        teleported: false,\n        injuredCounter: 0,\n        tunnelSpawning: false,\n        releasedVine: false,\n        swallow: false,\n        kneeling: false,\n        kneelingDelay: false,\n        rightTouchMeansDown: false,\n        rollingDelay: 0,\n    }) {\n        this.mainState = harry.mainState;\n        this.lastMainState = harry.lastMainState;\n        this.scene = harry.scene;\n        this.absoluteX = harry.absoluteX;\n        this.x = harry.x;\n        this.y = harry.y;\n        this.vy = harry.vy;\n        this.dir = harry.dir;\n        this.sprite = harry.sprite;\n        this.runCounter = harry.runCounter;\n        this.climbCounter = harry.climbCounter;\n        this.teleported = harry.teleported;\n        this.injuredCounter = harry.injuredCounter;\n        this.tunnelSpawning = harry.tunnelSpawning;\n        this.releasedVine = harry.releasedVine;\n        this.swallow = harry.swallow;\n        this.kneeling = harry.kneeling;\n        this.kneelingDelay = harry.kneelingDelay;\n        this.rightTouchMeansDown = harry.rightTouchMeansDown;\n        this.rollingDelay = harry.rollingDelay;\n    }\n\n    intersects(mask: Mask, x: number, y: number): boolean {\n        return spritesIntersect(mask, x, y, harryMasks[this.dir][this.sprite], Math.floor(this.x) - 4, \n                Math.floor(this.y) - 22);\n    }\n\n    canBeHitByRollingLog() {\n        return this.mainState === MainState.STANDING || this.mainState === MainState.KNEELING \n                || this.mainState === MainState.CLIMBING;\n    }\n\n    isClimbing() {\n        return this.mainState === MainState.CLIMBING;\n    }\n\n    isFalling() {\n        return this.mainState === MainState.FALLING;\n    }\n\n    isUnderground() {\n        switch (this.mainState) {\n            case MainState.SINKING:\n            case MainState.SWINGING:\n            case MainState.SKIDDING:\n            case MainState.KNEELING:\n                return false;            \n        }\n        return this.y > 146;\n    }\n\n    private teleport(x: number) {\n        this.teleported = true;\n        this.setX(x);\n    }\n\n    private setX(x: number) {\n        this.incrementX(x - this.x);\n    }    \n\n    private incrementX(deltaX: number) {\n        this.absoluteX += deltaX;\n        this.x += deltaX;        \n\n        if (this.x < 0) {\n            this.x += Resolution.WIDTH;\n            if (this.y > Y_UPPER_LEVEL) {\n                this.scene -= 3;\n            } else {\n                --this.scene;\n            }\n            if (this.scene < 0) {\n                this.scene += map.length;\n            }\n        } else if (this.x >= Resolution.WIDTH) {\n            this.x -= Resolution.WIDTH;\n            if (this.y > Y_UPPER_LEVEL) {\n                this.scene += 3;\n            } else {\n                ++this.scene;\n            }\n            if (this.scene >= map.length) {\n                this.scene -= map.length;\n            }\n        }\n    }\n\n    private startFalling(gs: GameState, v0: number) {\n        this.mainState = MainState.FALLING;\n        this.y += v0;\n        this.vy = G + v0;\n        this.sprite = 2;\n        this.kneeling = false;\n        this.updateShift(gs)\n    }\n\n    private endFalling(gs: GameState, y: number) {\n        this.mainState = MainState.STANDING;\n        this.y = y;\n        this.vy = 0;\n        this.sprite = 2;\n        this.runCounter = 0;\n        this.tunnelSpawning = false;\n        this.releasedVine = false;\n        this.updateShift(gs);\n    }\n\n    private startClimbing(y: number) {\n        this.mainState = MainState.CLIMBING;\n        this.teleport(64);\n        this.y = y;\n        this.sprite = 7;\n        this.kneeling = false;\n        this.climbCounter = 0;\n        this.rightTouchMeansDown = (y === 134) !== (this.dir !== 0);\n    }\n\n    private endClimbing(x: number, y: number, dir: number) {\n        this.mainState = MainState.STANDING;\n        this.teleport(x);\n        this.y = y;\n        this.runCounter = 0;\n        this.sprite = 0;\n        this.dir = dir;\n    }\n\n    private updateShift(gs: GameState): boolean {\n        const { wall } = map[this.scene];\n\n        let shifting = false;\n        if (rightPressed) {\n            let moveRight = true;\n            if (this.y >= 120 && ((wall === WallType.RIGHT && this.x === 119) \n                    || (wall === WallType.LEFT && this.x === 1))) {\n                moveRight = false;\n            } else if (this.y > Y_UPPER_LEVEL && this.y <= Y_HOLE_BOTTOM) {\n                if (this.x >= 32 && this.x <= 44) {\n                    if (this.x > 43.5) {\n                        moveRight = false;\n                    }\n                } else if (this.x >= 84 && this.x <= 96) {\n                    if (this.x > 95.5) {\n                        moveRight = false;\n                    }\n                }                \n            } \n            if (moveRight) {\n                this.incrementX(.5);\n                this.dir = 0;\n                shifting = true;\n            }\n        } else if (leftPressed) {\n            let moveLeft = true;\n            if (this.y >= 120 && ((wall === WallType.LEFT && this.x === 10) \n                    || (wall === WallType.RIGHT && this.x === 128))) {\n                moveLeft = false;\n            } else if (this.y > Y_UPPER_LEVEL && this.y <= Y_HOLE_BOTTOM) {\n                if (this.x >= 32 && this.x <= 43) {\n                    if (this.x < 32.5) {\n                        moveLeft = false;\n                    }\n                } else if (this.x >= 84 && this.x <= 95) {\n                    if (this.x < 84.5) {\n                        moveLeft = false;\n                    }\n                }                \n            }\n            if (moveLeft) {\n                this.incrementX(-.5);\n                this.dir = 1;\n                shifting = true;\n            }\n        }\n        return shifting;\n    }\n\n    canStartClimbingUp(): boolean {\n        return this.mainState == MainState.STANDING && this.y === Y_LOWER_LEVEL && this.x >= 56 && this.x <= 72 \n                && !(leftPressed || rightPressed || upPressed || downPressed || jumpPressed);\n    }\n\n    private updateStanding(gs: GameState) {\n        const { ladder, holes } = map[this.scene];\n\n        if (holes && this.y === Y_UPPER_LEVEL && ((this.x >= 32 && this.x <= 44) || (this.x >= 84 && this.x <= 96))) {\n            this.startFalling(gs, G);\n            gs.score = Math.max(0, gs.score - 100);\n            play('sfx/fall.mp3')\n            return;\n        }\n\n        if (jumpPressed) {\n            this.startFalling(gs, VY0);\n            play('sfx/jump.mp3');\n            return;\n        }\n\n        if (ladder) {\n            if (this.y === Y_UPPER_LEVEL && ((this.x >= 60 && this.x <= 67) \n                    || (((downPressed && !(leftPressed || rightPressed)) || downJustPressed) \n                            && this.x >= 56 && this.x <= 72))) {\n                this.startClimbing(134);\n                return;\n            } \n            if (this.y === Y_LOWER_LEVEL && ((upPressed && !(leftPressed || rightPressed)) || upJustPressed) \n                    && this.x >= 56 && this.x <= 72) {\n                this.startClimbing(this.y);\n                return;\n            }\n        }\n\n        if (this.updateShift(gs)) {\n            if (this.runCounter === 0 && ++this.sprite === 6) {\n                this.sprite = 1;\n            }\n            this.runCounter = (this.runCounter + 1) & 3;\n        } else {\n            this.runCounter = 0;\n            this.sprite = (this.lastMainState === MainState.FALLING) ? 2 : 0;\n        }        \n    }\n\n    private updateFalling(gs: GameState) {\n        const { ladder, holes, wall } = map[this.scene];\n\n        if (ladder && this.y >= 134 && this.y < Y_LOWER_LEVEL && this.x >= 60 && this.x <= 67) {\n            const stepsToTop = Math.floor((this.y - 134) / 4);\n            this.startClimbing(134 + 4 * stepsToTop);\n            this.dir ^= stepsToTop & 1;\n            return;           \n        } \n\n        const nextY = this.y + this.vy;\n\n        if (this.y <= Y_UPPER_LEVEL && nextY >= Y_UPPER_LEVEL) {\n            if (ladder && this.x >= 60 && this.x <= 67) {\n                this.startClimbing(134);\n                return;\n            }\n            if (!holes || this.x < 32 || this.x > 95 || (this.x > 43 && this.x < 84)) {\n                this.endFalling(gs, Y_UPPER_LEVEL);\n                return;        \n            }\n        } \n            \n        if (this.y <= Y_LOWER_LEVEL && nextY >= Y_LOWER_LEVEL) {\n            this.endFalling(gs, Y_LOWER_LEVEL);\n            return;\n        }\n\n        this.y += this.vy;\n        this.vy += G;\n        this.sprite = 5;\n        \n        this.updateShift(gs);\n    }\n\n    private climbUpward() {\n        if (this.y === 134) {\n            this.climbCounter = 0;                    \n        } else if (++this.climbCounter >= 8) {\n            this.climbCounter = 0;\n            this.y -= 4;\n            this.dir ^= 1;\n        }\n    }\n\n    private climbDownward(): boolean {\n        if (this.y === Y_LOWER_LEVEL) {\n            this.endClimbing(this.x, Y_LOWER_LEVEL, this.dir);\n            return true;\n        } \n        if (++this.climbCounter >= 8) {\n            this.climbCounter = 0;\n            this.y += 4;\n            this.dir ^= 1;\n        }\n        return false;\n    }\n\n    private updateClimbing(gs: GameState) {\n        if (this.y <= 142) {\n            if (this.y === 134 && upPressed) {\n                if (this.rightTouchMeansDown) {\n                    this.endClimbing(59, Y_UPPER_LEVEL, 1);\n                } else {\n                    this.endClimbing(69, Y_UPPER_LEVEL, 0);\n                }\n                return;\n            }\n\n            if (rightJustPressed || (jumpJustPressed && this.dir === 0)) {\n                this.endClimbing(69, Y_UPPER_LEVEL, 0);\n                return;\n            } \n\n            if (leftJustPressed || (jumpJustPressed && this.dir === 1)) {\n                this.endClimbing(59, Y_UPPER_LEVEL, 1);\n                return;\n            }\n        }\n\n        if (this.y >= 170 && !upPressed && (leftPressed || rightPressed)) {\n            this.endClimbing(this.x, Y_LOWER_LEVEL, this.dir);\n            return;\n        }\n\n        if (upPressed) {\n            this.climbUpward();\n        } else if (downPressed && this.climbDownward()) {\n            return;\n        } \n    }\n\n    isInjured() {\n        return this.mainState === MainState.INJURED || this.mainState === MainState.SINKING;\n    }\n    \n    injure() {\n        this.mainState = MainState.INJURED;\n        this.injuredCounter = INJURED_DELAY;\n        play('sfx/die.mp3');\n    }\n\n    private startTunnelSpawn(gs: GameState) {\n        if (gs.extraLives === 0) {\n            gs.endGame();\n            return;\n        }\n        --gs.extraLives;\n\n        this.mainState = MainState.FALLING;\n        this.tunnelSpawning = true;\n        let spawnX: number;\n        if (this.dir === 0) {\n            spawnX = this.x - X_SPAWN_MARGIN;\n            if (spawnX < 4) {\n                spawnX = this.x + X_SPAWN_MARGIN;\n            }    \n        } else {\n            spawnX = this.x + X_SPAWN_MARGIN;\n            if (spawnX >= 140) {\n                spawnX = this.x - X_SPAWN_MARGIN;\n            }\n        }\n        this.teleport(spawnX);\n        this.y = 149;\n        this.vy = 0;\n        this.sprite = 2;\n    }\n\n    private startTreeSpawn(gs: GameState) {\n        if (gs.extraLives === 0) {\n            gs.endGame();\n            return;\n        }\n        --gs.extraLives;\n\n        this.mainState = MainState.FALLING;\n        this.teleport((this.dir === 0) ? 8 : 127);\n        this.y = 51;\n        this.vy = 0;\n        this.sprite = 2;\n        this.swallow = false;\n    }    \n    \n    private updateInjured(gs: GameState) {\n        if (--this.injuredCounter === 0) {\n            if (this.isUnderground()) {\n                this.startTunnelSpawn(gs);\n            } else {\n                this.startTreeSpawn(gs);\n            }\n            return;\n        }\n    }\n\n    swing() {\n        this.mainState = MainState.SWINGING;\n        this.sprite = 6;\n        this.teleported = true;\n        play('sfx/swing.mp3');\n    }\n\n    private updateSwinging(gs: GameState) {\n        const v = vineStates[gs.vine.sprite];\n        this.setX(this.dir === 0 ? v.x + 1 : v.x);\n        this.y = v.y + 17;\n\n        if ((this.dir === 0 && rightJustPressed) || (this.dir === 1 && leftJustPressed)) {\n            this.startFalling(gs, v.vy);\n            this.releasedVine = true;\n            return;\n        }\n    }\n\n    checkSink(xMin: number, xMax: number): boolean {\n        const X = Math.floor(this.x);\n        if (this.mainState !== MainState.STANDING || this.y !== Y_UPPER_LEVEL || X < xMin || X > xMax) {\n            return false;\n        }\n        this.mainState = MainState.SINKING;\n        this.sprite = 0;\n        play('sfx/die.mp3');\n        return true;\n    }\n\n    checkSwallow(xMin: number, xMax: number) {\n        const X = Math.floor(this.x);\n        if (X < xMin || X > xMax) {\n            return;\n        }\n        this.swallow = true;\n    }\n\n    private updateSinking(gs: GameState) {\n        if (++this.y > 143 + INJURED_DELAY) {\n            this.startTreeSpawn(gs);\n            return;\n        }\n    }\n\n    private startKnelling() {\n        this.mainState = MainState.KNEELING;\n        this.sprite = 5;\n        this.kneeling = true;\n        this.kneelingDelay = true;\n    }\n\n    rolled() {\n        play('sfx/kneel.mp3', true);\n        this.rollingDelay = 2;\n        switch (this.mainState) {\n            case MainState.STANDING:\n            case MainState.KNEELING:    \n                this.startKnelling();\n                break;\n            case MainState.CLIMBING:\n                this.climbDownward();\n                break;\n        }\n    }\n\n    skidded() {\n        play('sfx/kneel.mp3', true);\n        switch (this.mainState) {\n            case MainState.STANDING:\n            case MainState.SKIDDING:    \n                this.mainState = MainState.SKIDDING;\n                this.sprite = 5;\n                this.kneeling = true;\n                this.kneelingDelay = true;\n                break;\n        }        \n    }\n\n    private updateKneeling(gs: GameState) {\n        if (this.kneelingDelay) {\n            this.kneelingDelay = false;\n        } else {\n            this.mainState = MainState.STANDING;\n            this.sprite = 0;\n            this.kneeling = false;\n            stop('sfx/kneel.mp3');\n        }\n    }\n\n    private updateSkidding(gs: GameState) {\n        this.updateKneeling(gs);\n        this.updateStanding(gs);\n    }    \n\n    update(gs: GameState) {\n        const state = this.mainState;\n        switch (this.mainState) {\n            case MainState.STANDING:\n                this.updateStanding(gs);\n                break;\n            case MainState.FALLING:\n                this.updateFalling(gs);\n                break; \n            case MainState.CLIMBING:\n                this.updateClimbing(gs);\n                break;\n            case MainState.INJURED:\n                this.updateInjured(gs);\n                break;\n            case MainState.SWINGING:\n                this.updateSwinging(gs);\n                break;\n            case MainState.SINKING:\n                this.updateSinking(gs);\n                break;\n            case MainState.KNEELING:\n                this.updateKneeling(gs);\n                break;\n            case MainState.SKIDDING:\n                this.updateSkidding(gs);\n                break;        \n        }\n        this.lastMainState = state;\n        if (this.rollingDelay > 0 && --this.rollingDelay === 0) {\n            stop('sfx/kneel.mp3');\n        }\n    }\n\n    render(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, ox: number) {\n        const sprite = harrySprites[this.dir][this.kneeling ? 5 : this.sprite];\n        const X = Math.floor(this.x) - 4 - ox;\n        const Y = this.kneeling ? Y_UPPER_LEVEL - 17 : Math.floor(this.y) - 22;\n        if (this.mainState === MainState.SINKING) {\n            if (this.swallow) {\n                if (Y < 121) {\n                    ctx.drawImage(sprite, 0, 0, 8, 121 - Y, X, Y, 8, 121 - Y);\n                    const crocImages = crocSprites[gs.sceneStates[this.scene].enteredLeft ? 0 : 1];                  \n                    ctx.drawImage(crocImages[0], 0, 9, 8, 2, 44 - ox, 120, 8, 2);\n                    ctx.drawImage(crocImages[0], 0, 9, 8, 2, 60 - ox, 120, 8, 2);\n                    ctx.drawImage(crocImages[0], 0, 9, 8, 2, 76 - ox, 120, 8, 2);\n                }\n            } else if (Y < 119) {\n                ctx.drawImage(sprite, 0, 0, 8, 119 - Y, X, Y, 8, 119 - Y);\n            }\n        } else if (this.tunnelSpawning && Y >= 127 && Y < 142) {\n            ctx.drawImage(sprite, 0, 142 - Y, 8, Y - 100, X, 142, 8, Y - 100);\n        } else if (Y < 101 || Y >= 127) {\n            ctx.drawImage(sprite, X, Y);\n        } else {            \n            if (Y < 122) {\n                ctx.drawImage(sprite, 0, 0, 8, 122 - Y, X, Y, 8, 122 - Y);\n            }\n            if (Y > 106) {\n                ctx.drawImage(sprite, 0, 127 - Y, 8, Y - 105, X, 127, 8, Y - 105);\n            }\n        }\n    }\n}","export const map = new Array<Scene>(255);\n\nexport enum PitType {    \n    TAR,\n    QUICKSAND,\n    CROCS,\n    SHIFTING_TAR,\n    SHIFTING_QUICKSAND,\n    NONE,\n}\n\nexport enum TreasureType {\n    MONEY_BAG = 0,\n    SILVER_BRICK = 1,\n    GOLD_BRICK = 2,\n    DIAMOND_RING = 3,\n    NONE = 4,\n}\n\nexport enum ObsticleType {\n    ONE_ROLLING_LOG = 0,\n    TWO_ROLLING_LOGS_NEAR = 1,\n    TWO_ROLLING_LOGS_FAR = 2,\n    THREE_ROLLING_LOGS = 3,\n    ONE_STATIONARY_LOG = 4,\n    THREE_STATIONARY_LOGS = 5,\n    FIRE = 6,\n    COBRA = 7,\n    NONE = 8,\n}\n\nexport enum WallType {\n    LEFT = 0,\n    RIGHT = 1,\n    NONE = 2,\n}\n\nexport class Scene {\n    constructor(public trees: number,\n                public ladder: boolean,\n                public holes: boolean,\n                public vine: boolean,\n                public pit: PitType,\n                public treasure: TreasureType,\n                public obsticles: ObsticleType,\n                public wall: WallType,\n                public scorpion: boolean,\n                public difficulty: number) {\n    }\n}\n\nlet seed = 0xC4;\nfor (let i = 0; i < map.length; ++i) {\n    let difficulty = 304;\n    const trees = seed >> 6;\n    let ladder = false;\n    let holes = false;\n    let vine = false;\n    let pit = PitType.NONE;\n    let treasure = TreasureType.NONE;\n    let obsticles = ObsticleType.NONE;\n    let wall = WallType.NONE;\n    switch ((seed >> 3) & 7) {\n        case 0:\n            ladder = true;\n            difficulty += 5;\n            break;\n        case 1:\n            ladder = true;\n            holes = true;\n            difficulty += 10;\n            break;\n        case 2:\n            vine = true;\n            pit = PitType.TAR;\n            difficulty += 143;\n            break;\n        case 3:\n            vine = true;\n            pit = PitType.QUICKSAND;\n            difficulty += 143;\n            break;\n        case 4:\n            vine = ((seed >> 1) & 1) === 1;\n            pit = PitType.CROCS;\n            difficulty += vine ? 143 : 240;\n            break;\n        case 5:\n            pit = PitType.SHIFTING_TAR;\n            treasure = seed & 3;\n            difficulty += 111;\n            break;\n        case 6:\n            pit = PitType.SHIFTING_TAR;\n            vine = true;\n            difficulty += 111;\n            break;\n        case 7:\n            pit = PitType.SHIFTING_QUICKSAND;\n            difficulty += 111;\n            break;                            \n    }\n    if (treasure === TreasureType.NONE && pit !== PitType.CROCS) {\n        obsticles = seed & 7;\n        switch (obsticles) {\n            case ObsticleType.ONE_STATIONARY_LOG:\n            case ObsticleType.THREE_STATIONARY_LOGS:\n            case ObsticleType.ONE_ROLLING_LOG:\n                difficulty += 5;\n                break;\n            case ObsticleType.TWO_ROLLING_LOGS_FAR:\n                difficulty += 10;\n                break;\n            case ObsticleType.TWO_ROLLING_LOGS_NEAR:\n                difficulty += 15;\n                break;\n            case ObsticleType.THREE_ROLLING_LOGS:\n                difficulty += 20;\n                break;                                        \n            case ObsticleType.FIRE:\n            case ObsticleType.COBRA:\n                difficulty += 30;\n                break;\n        }\n    }\n    if (ladder) {\n        wall = (seed >> 7) & 1;\n    }\n    map[i] = new Scene(trees, ladder, holes, vine, pit, treasure, obsticles, wall, !ladder, difficulty);\n\n    seed = 0xFF & ((seed << 1) | (((seed >> 7) & 1) ^ ((seed >> 5) & 1) ^ ((seed >> 4) & 1) ^ ((seed >> 3) & 1)));\n}","import { GameState } from './game-state';\nimport { PitType, map } from './map';\nimport { pitSprites, crocSprites } from '@/graphics';\nimport { store, Difficulty } from '@/store';\n\nconst PIT_OPEN_FRAMES = 71;\nconst PIT_CLOSED_FRAMES = 143;\nconst PIT_SHIFT_FRAMES = 4;\n\nconst CROC_CLOSED_FRAMES = 192; // 128\nconst CROC_OPENED_FRAMES = 128; // 128\n\nconst X_SHIFTS = [\n    [ 33, 95 ],\n    [ 37, 91 ],\n    [ 41, 87 ],\n    [ 49, 79 ],\n    [ 61, 67 ],\n];\n\nconst X_CLOSED_CROCS = [\n    [ 33, 43 ],\n    [ 53, 59 ],\n    [ 69, 75 ],\n    [ 85, 95 ],\n];\n\nconst X_OPENED_CROCS_LEFT = [\n    [ 33, 48 ],\n    [ 53, 64 ],\n    [ 69, 80 ],\n    [ 85, 95 ],\n];\n\nconst X_OPENED_CROCS_RIGHT = [\n    [ 33, 43 ],\n    [ 48, 59 ],\n    [ 64, 75 ],\n    [ 80, 95 ],\n];\n\nconst X_CROCS = [\n    [ 45, 51 ],\n    [ 61, 67 ],\n    [ 77, 83 ],\n];\n\nenum PitState {\n    OPENED,\n    CLOSING,\n    CLOSED,\n    OPENING,\n}\n\nenum CrocState {\n    OPENED,\n    CLOSED,\n}\n\nexport class Pit {\n\n    pitState: PitState;\n    pitOffset: number;\n    pitCounter: number;\n    \n    crocState: CrocState;\n    crocCounter: number;\n\n    constructor(pit: {\n        pitState: PitState;\n        pitOffset: number;\n        pitCounter: number;\n        crocState: CrocState;\n        crocCounter: number;\n    } = {\n        pitState: PitState.OPENED,\n        pitOffset: 0,\n        pitCounter: PIT_OPEN_FRAMES,\n        crocState: CrocState.CLOSED,\n        crocCounter: CROC_CLOSED_FRAMES,\n    }) {\n        this.pitState = pit.pitState;\n        this.pitOffset = pit.pitOffset;\n        this.pitCounter = pit.pitCounter;\n        this.crocState = pit.crocState;\n        this.crocCounter = pit.crocCounter;\n    }\n\n    private updatePitOpened(gs: GameState) {\n        if (--this.pitCounter >= 0) {\n            return;\n        }\n        this.pitState = PitState.CLOSING;\n        this.pitCounter = PIT_SHIFT_FRAMES;\n        ++this.pitOffset;\n    }\n\n    private updatePitClosing(gs: GameState) {\n        if (--this.pitCounter >= 0) {\n            return;\n        }\n        if (++this.pitOffset === 5) {\n            this.pitState = PitState.CLOSED;\n            this.pitCounter = PIT_CLOSED_FRAMES;\n            return;\n        } \n        this.pitCounter = PIT_SHIFT_FRAMES;\n    }\n    \n    private updatePitClosed(gs: GameState) {\n        if (--this.pitCounter >= 0) {\n            return;\n        }\n        this.pitState = PitState.OPENING;\n        this.pitCounter = PIT_SHIFT_FRAMES;\n        --this.pitOffset;\n    }\n    \n    private updatePitOpening(gs: GameState) {\n        if (--this.pitCounter >= 0) {\n            return;\n        }\n        if (--this.pitOffset === 0) {\n            this.pitState = PitState.OPENED;\n            this.pitCounter = PIT_OPEN_FRAMES;\n            return;\n        } \n        this.pitCounter = PIT_SHIFT_FRAMES;\n    }\n\n    private updateCrocOpened(gs: GameState) {\n        if (--this.crocCounter === 0) {\n            this.crocState = CrocState.CLOSED;\n            this.crocCounter = CROC_CLOSED_FRAMES + 1;\n            this.updateCrocClosed(gs);\n            return;\n        }\n\n        const { harry, sceneStates } = gs;\n        if (map[harry.scene].pit !== PitType.CROCS) {\n            return;\n        }\n\n        const xOpenedCrocs = (sceneStates[harry.scene].enteredLeft) ? X_OPENED_CROCS_LEFT : X_OPENED_CROCS_RIGHT;\n        for (let i = xOpenedCrocs.length - 1; i >= 0; --i) {\n            const xCrocs = xOpenedCrocs[i];\n            if (harry.checkSink(xCrocs[0], xCrocs[1])) {\n                for (let j = X_CROCS.length - 1; j >= 0; --j) {\n                    const xs = X_CROCS[j];\n                    harry.checkSwallow(xs[0], xs[1]);\n                }\n                break;\n            }\n        }\n    }\n\n    private updateCrocClosed(gs: GameState) {\n        if (--this.crocCounter === 0) {\n            this.crocState = CrocState.OPENED;\n            this.crocCounter = CROC_OPENED_FRAMES + 1;\n            this.updateCrocOpened(gs);\n            return;\n        }\n\n        const { harry } = gs;\n        if (map[harry.scene].pit !== PitType.CROCS) {\n            return;\n        }\n\n        for (let i = X_CLOSED_CROCS.length - 1; i >= 0; --i) {\n            const xCrocs = X_CLOSED_CROCS[i];\n            if (harry.checkSink(xCrocs[0], xCrocs[1])) {\n                break;\n            }\n        }\n    }    \n\n    update(gs: GameState) {\n        switch (this.pitState) {\n            case PitState.OPENED:\n                this.updatePitOpened(gs);\n                break;\n            case PitState.CLOSING:\n                this.updatePitClosing(gs);\n                break;  \n            case PitState.CLOSED:\n                this.updatePitClosed(gs);\n                break;\n            case PitState.OPENING:\n                this.updatePitOpening(gs);\n                break;                              \n        }\n\n        switch (this.crocState) {\n            case CrocState.OPENED:\n                this.updateCrocOpened(gs);\n                break;\n            case CrocState.CLOSED:\n                this.updateCrocClosed(gs);\n                break;    \n        }\n\n        const { harry } = gs;\n        switch (map[harry.scene].pit) {\n            case PitType.TAR:\n            case PitType.QUICKSAND:               \n                harry.checkSink(X_SHIFTS[0][0], X_SHIFTS[0][1]);\n                break;\n            case PitType.SHIFTING_TAR:\n            case PitType.SHIFTING_QUICKSAND:\n                if (this.pitOffset < 5) {\n                    harry.checkSink(X_SHIFTS[this.pitOffset][0], X_SHIFTS[this.pitOffset][1]);\n                }\n                break;\n        }\n    }\n\n    render(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, scene: number, ox: number) {\n        const { pit } = map[scene];\n        const sprites = pitSprites[(pit === PitType.TAR || pit == PitType.SHIFTING_TAR) ? 0 : 1];\n        if (pit === PitType.SHIFTING_TAR || pit === PitType.SHIFTING_QUICKSAND) {\n            if (store.difficulty !== Difficulty.HARD && this.pitState !== PitState.OPENED) {\n                ctx.drawImage(pitSprites[2][0], 32 - ox, 114);\n                ctx.drawImage(pitSprites[2][1], 32 - ox, 119);\n            }\n            if (this.pitState !== PitState.CLOSED) {\n                ctx.drawImage(sprites[0], 0, 0, 64, 5 - this.pitOffset, 32 - ox, 114 + this.pitOffset, 64, \n                        5 - this.pitOffset);\n                ctx.drawImage(sprites[1], 0, this.pitOffset, 64, 5 - this.pitOffset, 32 - ox, 119, 64, \n                        5 - this.pitOffset);\n            }\n        } else {\n            ctx.drawImage(sprites[0], 32 - ox, 114);\n            ctx.drawImage(sprites[1], 32 - ox, 119);\n            if (pit === PitType.CROCS) {\n                const crocImages = crocSprites[gs.sceneStates[scene].enteredLeft ? 0 : 1];\n                const sprite = this.crocState === CrocState.OPENED ? 1 : 0;\n                ctx.drawImage(crocImages[sprite], 44 - ox, 111);\n                ctx.drawImage(crocImages[sprite], 60 - ox, 111);\n                ctx.drawImage(crocImages[sprite], 76 - ox, 111);\n            }\n        }\n    }\n}","export class Rattle {   \n\n    seed: number;\n\n    constructor(rattle: {\n        seed: number;\n    } = {\n        seed: 1,\n    }) {\n        this.seed = rattle.seed;\n    }\n\n    update() {        \n        let a = this.seed;\n        a <<= 1;\n        a ^= this.seed;\n        a <<= 1;\n        this.seed = 0xFF & ((this.seed << 1) | ((a & 0x100) ? 1 : 0));\n    }\n\n    getValue(): number {\n        return (this.seed >> 4) & 1;\n    }\n}","import { logSprites, logMasks, Resolution } from '@/graphics';\nimport { GameState } from './game-state';\nimport { map, ObsticleType } from './map';\n\nexport class RollingLog {\n\n    xCounter: number;\n    spriteCounter: number;\n\n    constructor(rollingLog: {\n        xCounter: number;\n        spriteCounter: number;\n    } = {\n        xCounter: 72,\n        spriteCounter: 0,\n    }) {\n        this.xCounter = rollingLog.xCounter;\n        this.spriteCounter = rollingLog.spriteCounter;\n    }\n\n    // When the scroll position changes, floor the rolling logs counter to prevent jittering. Jittering occurs when the \n    // scroll position and the rolling logs change on alternate frames.\n    sync() {\n        this.xCounter = Math.floor(this.xCounter);\n    }\n\n    checkRolled(gs: GameState, x: number, y: number, sprite: number, offset: number, rollingRight: boolean) {\n        const { harry } = gs;\n        const X = (x + offset) % Resolution.WIDTH;\n        if (this.computeFade(gs, X, offset, gs.harry.scene, rollingRight) === 1\n                && harry.x >= X - 3 && harry.x <= X + 2\n                && harry.intersects(logMasks[sprite], X - 4, y)) {\n            gs.harry.rolled();\n            if (gs.score > 0) {\n                --gs.score;\n            }\n        }     \n    }\n\n    update(gs: GameState) {\n        this.xCounter += .5;\n        if (this.xCounter === Resolution.WIDTH) {\n            this.xCounter = 0;\n        }\n\n        this.spriteCounter = (this.spriteCounter + 1) & 0xF;\n\n        const { harry } = gs;\n        const { obsticles } = map[harry.scene];\n        if (!harry.canBeHitByRollingLog() || obsticles > ObsticleType.THREE_ROLLING_LOGS) {\n            return;\n        }\n\n        const rollingRight = gs.sceneStates[harry.scene].enteredLeft;\n        const x = Math.floor(rollingRight ? this.xCounter : Resolution.WIDTH - .5 - this.xCounter);\n        const s = this.spriteCounter >> 2;\n        const sprite = s & 1;\n        const y = 111 + ((s === 0) ? 1 : 0);\n\n        this.checkRolled(gs, x, y, sprite, 0, rollingRight);\n        switch (obsticles) {\n            case ObsticleType.TWO_ROLLING_LOGS_NEAR:\n                this.checkRolled(gs, x, y, sprite, 16, rollingRight);\n                break;\n            case ObsticleType.THREE_ROLLING_LOGS:\n                this.checkRolled(gs, x, y, sprite, 64, rollingRight);\n                // fall through to next case to check the third log\n            case ObsticleType.TWO_ROLLING_LOGS_FAR:\n                this.checkRolled(gs, x, y, sprite, 32, rollingRight);\n                break;                    \n        }\n    }\n\n    fadeLog(gs: GameState, scene: number, rollingRight: boolean, offset: number): boolean {\n        if (gs.sceneStates[scene].enteredLeft !== rollingRight) {\n            return true;\n        } \n        const { obsticles } = map[scene];\n        switch (offset) {\n            case 0:\n                if (obsticles > ObsticleType.THREE_ROLLING_LOGS) {\n                    return true;\n                }\n                break;\n            case 16:\n                if (obsticles !== ObsticleType.TWO_ROLLING_LOGS_NEAR) {\n                    return true;\n                }\n                break;\n            case 32:\n                if (obsticles !== ObsticleType.TWO_ROLLING_LOGS_FAR && obsticles !== ObsticleType.THREE_ROLLING_LOGS) {\n                    return true;\n                }\n                break;\n            case 64:\n                if (obsticles !== ObsticleType.THREE_ROLLING_LOGS) {\n                    return true;\n                }\n                break;\n        }\n        return false;\n    }\n\n    computeFade(gs: GameState, X: number, offset: number, scene: number, rollingRight: boolean): number {        \n        if (X <= 15) {\n            let leftScene = scene - (gs.harry.isUnderground() ? 3 : 1);\n            if (leftScene < 0) {\n                leftScene += gs.sceneStates.length;\n            }\n            if (this.fadeLog(gs, leftScene, rollingRight, offset)) {\n                return (X + 1) / 17;\n            }            \n        } else if (X >= Resolution.WIDTH - 15) {\n            let rightScene = scene + (gs.harry.isUnderground() ? 3 : 1);\n            if (rightScene >= gs.sceneStates.length) {\n                rightScene -= gs.sceneStates.length;\n            }\n            if (this.fadeLog(gs, rightScene, rollingRight, offset)) {\n                return (Resolution.WIDTH - X + 1) / 17;\n            }\n        }\n        return 1;        \n    }\n\n    renderLog(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, sprite: number, x: number, y: number, \n            offset: number, scene: number, rollingRight: boolean, ox: number) {\n        const X = (x + offset) % Resolution.WIDTH;\n        ctx.globalAlpha = this.computeFade(gs, X, offset, scene, rollingRight);\n        ctx.drawImage(logSprites[sprite], X - 4 - ox, y);\n        ctx.globalAlpha = 1;\n    }\n\n    render(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, scene: number, ox: number) {\n        const rollingRight = gs.sceneStates[scene].enteredLeft;\n        const x = Math.floor(rollingRight ? this.xCounter : Resolution.WIDTH - .5 - this.xCounter);\n        const s = this.spriteCounter >> 2;\n        const sprite = s & 1;\n        const y = 111 + ((s === 0) ? 1 : 0);\n\n        this.renderLog(gs, ctx, sprite, x, y, 0, scene, rollingRight, ox);\n        switch (map[scene].obsticles) {\n            case ObsticleType.TWO_ROLLING_LOGS_NEAR:\n                this.renderLog(gs, ctx, sprite, x, y, 16, scene, rollingRight, ox);\n                break;\n            case ObsticleType.THREE_ROLLING_LOGS:\n                this.renderLog(gs, ctx, sprite, x, y, 64, scene, rollingRight, ox);\n                // fall through to next case to draw the third log\n            case ObsticleType.TWO_ROLLING_LOGS_FAR:\n                this.renderLog(gs, ctx, sprite, x, y, 32, scene, rollingRight, ox);\n                break;                    \n        }\n    }\n}","import { scorpionMasks, sorpionSprites, Resolution } from '@/graphics';\nimport { GameState } from './game-state';\nimport { map } from './map';\n\nconst X_START = Resolution.WIDTH / 2;\nconst X_MIN = 4;\nconst X_MAX = Resolution.WIDTH - 4;\nconst X_MARGIN = Resolution.WIDTH / 8;\nconst FRAMES_PER_UPDATE = 8;\n\nexport class Scorpion {\n    x: number;\n    X: number;\n    dir: number;\n    sprite: number;\n    updateCounter: number;\n\n    constructor(scorpion: {\n        x: number;\n        X: number;\n        dir: number;\n        sprite: number;\n        updateCounter: number;\n    } = {\n        x: X_START,\n        X: X_START,\n        dir: 0,\n        sprite: 0,\n        updateCounter: FRAMES_PER_UPDATE,\n    }) {\n        this.x = scorpion.x;\n        this.X = scorpion.X;\n        this.dir = scorpion.dir;\n        this.sprite = scorpion.sprite;\n        this.updateCounter = scorpion.updateCounter;\n    }\n\n    update(gs: GameState) {\n        const harryNearby = map[gs.harry.scene].scorpion && gs.harry.isUnderground();\n        if (harryNearby && gs.harry.intersects(scorpionMasks[this.dir][this.sprite], Math.floor(this.x) - 4, 158)) {\n            gs.harry.injure();\n            return;\n        }        \n        \n        if (--this.updateCounter > 0) {\n            return;\n        }\n        this.updateCounter = FRAMES_PER_UPDATE;\n\n        this.sprite ^= 1;\n\n        if (harryNearby && Math.abs(gs.harry.x - this.x) >= X_MARGIN) {\n            const lastDir = this.dir;\n            this.dir = (this.x > gs.harry.x) ? 1 : 0;\n            if (lastDir !== this.dir) {\n                return;\n            }\n        }\n\n        if (this.dir === 0) {\n            if (this.x >= X_MAX) {\n                this.dir = 1;\n            } else {\n                ++this.x;\n            }\n        } else {\n            if (this.x <= X_MIN) {\n                this.dir = 0;\n            } else {\n                --this.x;\n            }\n        }\n    }\n\n    render(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, ox: number) {\n        ctx.drawImage(sorpionSprites[this.dir][this.sprite], Math.floor(this.x) - 4 - ox, 158);\n    }\n}","import { logSprites, logMasks, Resolution } from '@/graphics';\nimport { GameState } from './game-state';\nimport { map, ObsticleType } from './map';\n\nexport class StationaryLog {\n\n    constructor(_: { } = { }) {\n    }\n\n    checkSkid(gs: GameState, x: number, y: number) {\n        const { harry } = gs;\n        if (harry.x >= x + 1 && harry.x <= x + 6 && harry.intersects(logMasks[1], x, y)) {\n            harry.skidded();\n            if (gs.score > 0) {\n                --gs.score;\n            }\n        }\n    }    \n\n    update(gs: GameState) {\n        switch (map[gs.harry.scene].obsticles) {\n            case ObsticleType.THREE_STATIONARY_LOGS:\n                this.checkSkid(gs, 12, 111);\n                this.checkSkid(gs, 127, 111);\n                // fall through to test to the final log\n            case ObsticleType.ONE_STATIONARY_LOG:\n                this.checkSkid(gs, 108, 111);\n                break;\n        }        \n    }\n\n    render(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, scene: number, ox: number) {\n        switch (map[scene].obsticles) {\n            case ObsticleType.THREE_STATIONARY_LOGS:\n                ctx.drawImage(logSprites[1], 12 - ox, 111);\n                ctx.drawImage(logSprites[1], 127 - ox, 111);\n                // fall through to render to the final log\n            case ObsticleType.ONE_STATIONARY_LOG:\n                ctx.drawImage(logSprites[1], 108 - ox, 111);\n                break;\n        }\n    }\n}","import { map, TreasureType, WallType } from './map';\nimport { GameState } from './game-state';\nimport { dijkstra, Edge } from './dijkstra';\n\nexport enum Direction {\n    RIGHT = 0,\n    LEFT = 1,\n    UP = 2,\n    DOWN = 3,\n}\n\nexport enum Tier {\n    UPPER = 0,\n    LOWER = 1,\n}\n\nclass Node {\n    constructor(public readonly scene: number, public readonly tier: Tier) {        \n    }\n}\n\nfunction createNodes(): Node[][] {\n    const nodes = new Array<Node[]>(map.length);\n    for (let scene = map.length - 1; scene >= 0; --scene) {\n        nodes[scene] = [ new Node(scene, Tier.UPPER), new Node(scene, Tier.LOWER) ];\n    }\n    return nodes;\n}\n\nfunction createGraph(nodes: Node[][]): Map<Node, Edge<Node>[]> {\n\n    const graph = new Map<Node, Edge<Node>[]>();\n    for (let scene = map.length - 1; scene >= 0; --scene) {\n        {\n            const edges: Edge<Node>[] = [];\n            if (map[scene].ladder) {\n                edges.push({ \n                    node: nodes[scene][Tier.LOWER], \n                    weight: 165 + map[scene].difficulty, \n                });\n            }\n            let leftScene = scene - 1;\n            if (leftScene < 0) {\n                leftScene += map.length;\n            }\n            let rightScene = scene + 1;\n            if (rightScene >= map.length) {\n                rightScene -= map.length;\n            }\n            edges.push({ \n                node: nodes[leftScene][Tier.UPPER], \n                weight: map[scene].difficulty + map[leftScene].difficulty, \n            });\n            edges.push({ \n                node: nodes[rightScene][Tier.UPPER], \n                weight: map[scene].difficulty + map[rightScene].difficulty,\n            });            \n            graph.set(nodes[scene][Tier.UPPER], edges);\n        }\n\n        {\n            const edges: Edge<Node>[] = [];\n            if (map[scene].ladder) {\n                edges.push({ \n                    node: nodes[scene][Tier.UPPER], \n                    weight: 165 + map[scene].difficulty,\n                });\n            }\n            let leftScene = scene - 3;\n            if (leftScene < 0) {\n                leftScene += map.length;\n            }\n            let rightScene = scene + 3;\n            if (rightScene >= map.length) {\n                rightScene -= map.length;\n            }\n            if (map[scene].wall !== WallType.LEFT && map[leftScene].wall !== WallType.RIGHT) {\n                edges.push({ \n                    node: nodes[leftScene][Tier.LOWER], \n                    weight: 10, \n                });\n            }\n            if (map[scene].wall !== WallType.RIGHT && map[rightScene].wall !== WallType.LEFT) {\n                edges.push({ \n                    node: nodes[rightScene][Tier.LOWER], \n                    weight: 10, \n                });\n            }\n            graph.set(nodes[scene][Tier.LOWER], edges);\n        }\n    }    \n    return graph;\n}\n\nexport class TreasureCell {\n    constructor(public readonly direction: Direction) {\n    }\n}\n\nexport function updateTreasureMapIndex(gs: GameState) { \n    // Foward route -- Not as short as the reverse route, but doable in 20 minutes.\n    for (let i = 0; i < treasureIndices.length; ++i) {\n        if (gs.sceneStates[treasureIndices[i]].treasure !== TreasureType.NONE) {\n            gs.treasureMapIndex = i;\n            break;\n        }        \n    }\n\n    // Reverse route\n    // for (let i = treasureIndices.length - 1, j = 0; i >= 0; --i, --j) {\n    //     if (j < 0) {\n    //         j += treasureIndices.length;\n    //     }\n    //     if (gs.sceneStates[treasureIndices[j]].treasure !== TreasureType.NONE) {\n    //         gs.treasureMapIndex = j;\n    //         break;\n    //     }        \n    // }\n}\n\nexport const treasureIndices = new Array<number>(32);\nexport const treasureCells = new Array<TreasureCell[][]>(32);\n\nfunction initTreasureCells() {\n    const nodes = createNodes();\n    const graph = createGraph(nodes);\n    \n    let treasureIndex = 0;\n    for (let scene = 0; scene < map.length; ++scene) {\n        if (map[scene].treasure === TreasureType.NONE) {\n            continue;\n        }\n        treasureIndices[treasureIndex] = scene;\n        const distLinks = dijkstra(graph, nodes[scene][Tier.UPPER]);        \n        const cells = treasureCells[treasureIndex++] = new Array<TreasureCell[]>(map.length);\n        for (let i = 0; i < map.length; ++i) {\n            cells[i] = new Array<TreasureCell>(2);\n            {                             \n                const distLink = distLinks.get(nodes[i][Tier.UPPER]);\n                if (!distLink) {\n                    throw new Error('Missing upper distLink');\n                }\n                const { link } = distLink;\n                let direction = Direction.RIGHT;\n                if (link) {\n                    if (link.tier === Tier.LOWER) {\n                        direction = Direction.DOWN;\n                    } else {\n                        let leftScene = i - 1;\n                        if (leftScene < 0) {\n                            leftScene += map.length;\n                        }\n                        direction = (link.scene === leftScene) ? Direction.LEFT : Direction.RIGHT;\n                    }\n                }\n                cells[i][Tier.UPPER] = new TreasureCell(direction);\n            }\n            {                             \n                const distLink = distLinks.get(nodes[i][Tier.LOWER]);\n                if (!distLink) {\n                    throw new Error('Missing lower distLink');\n                }\n                const { link } = distLink;\n                let direction = Direction.RIGHT;\n                if (link) {\n                    if (link.tier === Tier.UPPER) {\n                        direction = Direction.UP;\n                    } else {\n                        let leftScene = i - 3;\n                        if (leftScene < 0) {\n                            leftScene += map.length;\n                        }\n                        direction = (link.scene === leftScene) ? Direction.LEFT : Direction.RIGHT;\n                    }\n                }\n                cells[i][Tier.LOWER] = new TreasureCell(direction);\n            }\n        }\n    }\n}\n\ninitTreasureCells();","import { GameState } from './game-state';\nimport { moneySprite, moneyMask, ringSprite, ringMask, goldSprites, goldMasks, silverSprites, silverMasks, Mask, \n    Sprite } from '@/graphics';\nimport { TreasureType } from './map';\nimport { updateTreasureMapIndex } from './treasure-map';\nimport { play } from '@/audio';\n\nexport class Treasure {\n\n    constructor(_: { } = { }) {\n    }\n\n    update(gs: GameState) {\n        let mask: Mask;\n        let points = 0;\n        switch (gs.sceneStates[gs.harry.scene].treasure) {\n            case TreasureType.DIAMOND_RING:\n                mask = ringMask;\n                points = 5000;\n                break;\n            case TreasureType.GOLD_BRICK:\n                mask = goldMasks[gs.rattle.getValue()];\n                points = 4000;\n                break;\n            case TreasureType.SILVER_BRICK:\n                mask = silverMasks[gs.rattle.getValue()];\n                points = 3000;\n                break;\n            case TreasureType.MONEY_BAG:\n                mask = moneyMask;\n                points = 2000;\n                break;\n            default:\n                return;    \n        }\n\n        if (gs.harry.intersects(mask, 108, 111)) {\n            gs.sceneStates[gs.harry.scene].treasure = TreasureType.NONE;            \n            gs.score += points;\n            if (++gs.treasureCount === 32) {\n                gs.endGame();\n            } else {\n                updateTreasureMapIndex(gs);\n            }\n            play('sfx/treasure.mp3');\n        }\n    }\n\n    render(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, scene: number, ox: number) {\n        let sprite: Sprite;\n        switch (gs.sceneStates[scene].treasure) {\n            case TreasureType.DIAMOND_RING:\n                sprite = ringSprite;\n                break;\n            case TreasureType.GOLD_BRICK:\n                sprite = goldSprites[gs.rattle.getValue()];\n                break;\n            case TreasureType.SILVER_BRICK:\n                sprite = silverSprites[gs.rattle.getValue()];\n                break;\n            case TreasureType.MONEY_BAG:\n                sprite = moneySprite;\n                break;\n            default:\n                return;    \n        }\n\n        ctx.drawImage(sprite, 108 - ox, 111);\n    }\n}","export class VineState {\r\n    constructor(public readonly x: number, public readonly y: number, public readonly vy: number) {\r\n    }\r\n}","import { vineStates, vineSprites, vineMasks } from '@/graphics';\nimport { GameState } from './game-state';\nimport { map } from './map';\n\nexport class Vine {\n    \n    sprite: number;\n\n    constructor(vine: {\n        sprite: number;\n    } = {\n        sprite: Math.floor(vineStates.length / 2),\n    }) {\n        this.sprite = vine.sprite;\n    }\n\n    update(gs: GameState) {\n        if (++this.sprite === vineStates.length) {\n            this.sprite = 0;\n        }\n\n        const { harry } = gs;\n        if (map[harry.scene].vine && !harry.releasedVine && harry.isFalling() \n                && harry.intersects(vineMasks[this.sprite], 33 /* 31 */, 28)) {\n            harry.swing();\n        }\n    }\n\n    render(gs: GameState, ctx: OffscreenCanvasRenderingContext2D, ox: number) {\n        ctx.drawImage(vineSprites[this.sprite], 33 /* 31 */ - ox, 28);\n    }\n}","import { TAU } from '@/math';\nimport { VineState } from '@/game/vine-state';\n\nclass RGBColor {\n    constructor(public readonly r: number, public readonly g: number, public readonly b: number) {        \n    }\n}\n\nexport type Sprite = ImageBitmap;\nexport type Mask = boolean[][];\n\nexport enum Resolution {\n    WIDTH = 136,\n    HEIGHT = 180,\n}\n\nexport enum PhysicalDimensions {\n    WIDTH = 4 * 136 / 160,\n    HEIGHT = 3 * 180 / 228,\n}\n\nexport enum Colors {\n    BROWN = 0x12,\n    YELLOW = 0x1e,\n    ORANGE = 0x3e,\n    RED = 0x48,\n    OFF_GREEN = 0xd5,\n    GREEN = 0xd6,\n    BLUE = 0xa4,\n    YELLOW_GREEN = 0xc8,\n    PINK = 0x4a,\n    BLACK = 0x00,\n    OFF_BLACK = 0x02,\n    GREY = 0x06,\n    OFF_WHITE = 0x0c,\n    WHITE = 0x0e,\n    DARK_GREEN = 0xd2,\n    DARK_RED = 0x42,\n    DARK_YELLOW = 0x14,\n    MID_YELLOW = 0x16,\n    LIGHT_YELLOW = 0x18,\n    DARK_BROWN = 0x10,    \n}\n\nexport const colors: string[] = new Array<string>(256);\n\nexport const harrySprites: Sprite[][] = new Array<Sprite[]>(2); // direction, sprite\nexport const harryMasks: Mask[][] = new Array<Mask[]>(2); // direction, mask\n\nexport const cobraSprites: Sprite[][] = new Array<Sprite[]>(2); // direction, sprite\nexport const cobraMasks: Mask[][] = new Array<Mask[]>(2); // direction, mask\n\nexport const crocSprites: Sprite[][] = new Array<Sprite[]>(2); // direction, sprite\n\nexport const sorpionSprites: Sprite[][] = new Array<Sprite[]>(2); // direction, sprite\nexport const scorpionMasks: Mask[][] = new Array<Mask[]>(2); // direction, mask\n\nexport const leavesSprites: Sprite[][] = new Array<Sprite[]>(2); // direction, sprite\n\nexport const logSprites: Sprite[] = new Array<Sprite>(2);\nexport const logMasks: Mask[] = new Array<Mask>(2);\n\nexport const fireSprites: Sprite[] = new Array<Sprite>(2);\nexport const fireMasks: Mask[] = new Array<Mask>(2);\n\nexport const goldSprites: Sprite[] = new Array<Sprite>(2);\nexport const goldMasks: Mask[] = new Array<Mask>(2);\n\nexport const silverSprites: Sprite[] = new Array<Sprite>(2);\nexport const silverMasks: Mask[] = new Array<Mask>(2);\n\nexport let moneySprite: Sprite;\nexport let moneyMask: Mask;\n\nexport let ringSprite: Sprite;\nexport let ringMask: Mask;\n\nexport let wallSprite: Sprite;\n\nexport let branchesSprite: Sprite;\n\nexport const charSprites: Sprite[][] = new Array<Sprite[]>(256); // color, character\n\nexport const pitSprites: Sprite[][] = new Array<Sprite[]>(3); // color(0=black,1=blue,2=yellow),sprite(0=bottom,1=top)\n\nexport const VINE_PERIOD = 285;\nexport const VINE_CX = 64; // 62 -- shifted vine 2 pixels right to better center it\nexport const VINE_CY = 28;\nexport const vineStates = new Array<VineState>(VINE_PERIOD);\nexport const vineSprites = new Array<Sprite>(VINE_PERIOD);\nexport const vineMasks = new Array<Mask>(VINE_PERIOD);\n\nexport const arrowSprites: Sprite[][] = new Array<Sprite[]>(2); // color, direction (0=right, 1=left, 2=up, 3=down)\n\nfunction createVineSprites(palette: RGBColor[], promises: Promise<any>[]) {\n    const LENGTH = 73;\n    const DISTORTION = 245 / 145;\n    const MAX_ANGLE = Math.atan(1 / DISTORTION);\n    \n    let minX = VINE_CX;\n    let minY = VINE_CY;\n    let maxX = VINE_CX;\n    let maxY = VINE_CY;        \n    for (let i = 0; i < VINE_PERIOD; ++i) {\n        const t = TAU * i / VINE_PERIOD;\n        const a = MAX_ANGLE * Math.sin(t);\n        const p = new VineState(Math.round(VINE_CX + LENGTH * DISTORTION * Math.sin(a) / 2), \n                Math.round(VINE_CY + LENGTH * Math.cos(a)), \n                -LENGTH * MAX_ANGLE * TAU * Math.sin(a) * Math.cos(t) / VINE_PERIOD);\n        vineStates[i] = p;\n        minX = Math.min(minX, p.x);\n        minY = Math.min(minY, p.y);\n        maxX = Math.max(maxX, p.x);\n        maxY = Math.max(maxY, p.y);\n    }\n\n    const color = palette[Colors.DARK_BROWN];\n    const width = maxX - minX + 1;\n    const height = maxY - minY + 1;\n    const imageData = new ImageData(width, height);    \n    for (let i = 0; i < vineStates.length; ++i) {\n        const p = vineStates[i];\n        imageData.data.fill(0);\n        plotLine(imageData, VINE_CX - minX, VINE_CY - minY, p.x - minX, p.y - minY, color);\n        vineMasks[i] = createMask(imageData);\n        promises.push(createImageBitmap(imageData).then(imageBitmap => vineSprites[i] = imageBitmap));\n    }    \n}\n\nasync function createSprite(width: number, height: number, callback: (imageData: ImageData) => void):\n        Promise<{ imageBitmap: Sprite, imageData: ImageData }> {\n    return new Promise(resolve => {\n        const imageData = new ImageData(width, height);\n        callback(imageData);\n        createImageBitmap(imageData).then(imageBitmap => resolve({ imageBitmap, imageData }));\n    });\n}\n\nfunction createMask(imageData: ImageData): Mask {\n    const mask = new Array<boolean[]>(imageData.height);\n    const { data } = imageData;\n    for (let y = 0, i = 3; y < imageData.height; ++y) {\n        mask[y] = new Array<boolean>(imageData.width);\n        for (let x = 0; x < imageData.width; ++x, i += 4) {\n            mask[y][x] = data[i] !== 0;\n        }\n    }\n    return mask;\n}\n\nfunction createSpriteAndMask(binStr: string, palette: RGBColor[], spriteOffset: number, colorOffset: number, \n        height: number, flipped: boolean, spriteCallback: (sprite: Sprite) => void, \n        maskCallback: ((mask: Mask) => void) | null, promises: Promise<any>[]) {\n\n    promises.push(createSprite(8, height, imageData => {\n        if (flipped) {\n            for (let y = 0; y < height; ++y) {\n                const offset = height - 1 - y;\n                const byte = binStr.charCodeAt(spriteOffset + offset);\n                const color = palette[binStr.charCodeAt(colorOffset + offset)];\n                for (let x = 0, mask = 0x01; x < 8; ++x, mask <<= 1) {\n                    if ((byte & mask) !== 0) {\n                        setColor(imageData, x, y, color);\n                    }\n                }\n            }\n        } else {\n            for (let y = 0; y < height; ++y) {\n                const offset = height - 1 - y;\n                const byte = binStr.charCodeAt(spriteOffset + offset);\n                const color = palette[binStr.charCodeAt(colorOffset + offset)];\n                for (let x = 0, mask = 0x80; x < 8; ++x, mask >>= 1) {\n                    if ((byte & mask) !== 0) {\n                        setColor(imageData, x, y, color);\n                    }\n                }\n            }\n        }\n    }).then(({ imageBitmap, imageData }) => {\n        spriteCallback(imageBitmap);\n        if (maskCallback) {\n            maskCallback(createMask(imageData));\n        }\n    }));        \n}\n\nfunction extractPalette(): RGBColor[] {\n    const palette = new Array<RGBColor>(256);\n    const binStr = atob('AAAAPz8+ZGRjhISDoqKhurq50tLR6urpPT0AXl4Ke3sVmZkgtLQqzc005uY+/f1IcSMAhj0LmVcYrW8mvYYyzZs+3LBJ6s'\n        + 'JUhhUAmi8OrkgewGEv0Xc+4I1N76Jb/bVoigAAnhMSsSgnwj080lFQ4mRj73V0/YaFeQBYjRJuoCeEsTuYwE6q0GG83XHM6oLcRQB4XRKPci'\n        + 'ekiDu5m07KrmHcv3Hs0IL7DgCFKROZQyitXT2/dFHQi2TfoXXutYb7AACKEhOdJCiwNz3BSVHRWmTganXueYb7ABV9EjGTJEynN2e7SYDMWp'\n        + 'fdaq7tecL7ACdYEkV0JGKNN36nSZe+WrDUasfoed37ADUmEldCJHZdN5V2SbGOWsylauW7ef3PADkAE1sSKHknPZc8UbNQZM1jdeZ0hv2FDj'\n        + 'IAK1QRR3MjY5M2fbBIlctZreVpwv14Jy4ARU4PYmshfogzl6NDsLxTx9Ri3epwPSMAXkINe18dmXsttJY7za9K5sdX/d1k');         \n    for (let i = 0x00; i <= 0xFF; ++i) {       \n        const j = 3 * (i >> 1);\n        const col = new RGBColor(binStr.charCodeAt(j), binStr.charCodeAt(j + 1), binStr.charCodeAt(j + 2));\n        palette[i] = col;\n        colors[i] = `#${((col.r << 16) | (col.g << 8) | col.b).toString(16).padStart(6, '0')}`;\n    }\n    return palette;\n}\n\nfunction setColor(imageData: ImageData, x: number, y: number, color: RGBColor) {\n    const offset = 4 * (y * imageData.width + x);\n    const data = imageData.data;\n    data[offset] = color.r;\n    data[offset + 1] = color.g;\n    data[offset + 2] = color.b;\n    data[offset + 3] = 0xFF;\n}\n\nfunction plotLine(imageData: ImageData, x0: number, y0: number, x1: number, y1: number, color: RGBColor) {\n    const dx = Math.abs(x1 - x0);\n    const sx = x0 < x1 ? 1 : -1;\n    const dy = -Math.abs(y1 - y0);\n    const sy = y0 < y1 ? 1 : -1;\n    let error = dx + dy\n    \n    while (true) {\n        setColor(imageData, x0, y0, color); \n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n        const e2 = 2 * error;\n        if (e2 >= dy) {\n            error = error + dy;\n            x0 = x0 + sx;\n        }\n        if (e2 <= dx) {\n            error = error + dx;\n            y0 = y0 + sy;\n        }\n    }\n}\n\nexport async function init() {\n\n    enum Offsets {\n        CLIMBCOLTAB = 0,\n        RUNCOLTAB = 22,\n        LOGCOLOR = 43,\n        FIRECOLOR = 59,\n        COBRACOLOR = 75,\n        CROCOCOLOR = 91,\n        MONEYBAGCOLOR = 107,\n        SCORPIONCOLOR = 123,\n        WALLCOLOR = 139,\n        RINGCOLOR = 155,\n        GOLDBARCOLOR = 171,\n        SILVERBARCOLOR = 187,\n        LEAVESCOLOR = 203,\n        BRANCHESCOLOR = 207,\n        LEAVES0 = 215,\n        LEAVES1 = 219,\n        LEAVES2 = 223,\n        LEAVES3 = 227,\n        HARRY0 = 231,\n        HARRY1 = 253,\n        HARRY2 = 275,\n        HARRY3 = 297,\n        HARRY4 = 319,\n        HARRY5 = 341,\n        HARRY6 = 363,\n        HARRY7 = 385,\n        BRANCHES = 407,\n        PIT = 415,\n        LOG0 = 420,\n        FIRE0 = 436,\n        COBRA0 = 452,\n        COBRA1 = 468,\n        CROCO0 = 484,\n        CROCO1 = 500,\n        MONEYBAG = 516,\n        SCORPION0 = 532,\n        SCORPION1 = 548,\n        WALL = 564,\n        BAR0 = 580,\n        BAR1 = 596,\n        RING = 612,\n        ZERO = 628,\n        ONE = 636,\n        TWO = 644,\n        THREE = 652,\n        FOUR = 660,\n        SIX = 676,\n        SEVEN = 684,\n        EIGHT = 692,\n        NINE = 700,\n        COLON = 708,\n        ARROWRIGHT = 716,\n        ARROWLEFT = 732,\n        ARROWUP = 748,\n        ARROWDOWN = 764,        \n    }\n\n    const palette = extractPalette();\n\n    const binStr = atob('0tLS0tLS0tLS0tLSyMjIyMjISkpKEtLS0tLS0tLS0tLIyMjIyMjISkpKEhISEhISEhISEhISEhISEhIQEBAQED4+Pi4uLi'\n        + '4uLi4uAAAEAAQAAAAAAAAAAABCQtDQ0NDQ0NDQ0NDQ0NDQ0NAEBAQEBAQEBAQEBAQSBAQEDg4ODg4ODg4ODg4ODg4ODgZCQkIGQkJCBkJCQg'\n        + 'ZCQkJCQh4eHh4eHh4eDg4ODg4OHh4eHh4eHh4ODg4ODg4ODgYGBgYGBgYODg4ODg4ODg7S0tLSEBAQEBAQEBABg8//ABg9fxi8/v8wePz+AA'\n        + 'AAAAAzctoeHBhYWHw+GhgQGBgYAACAgMNiYjY+HBgYPD46OBgYEBgYGAAQICIkNDIWHhwYGBwcGBgYGBAYGBgADAgoKD4KDhwYGBwcGBgYGB'\n        + 'gQGBgYAAACQ0R0FBwcGBgYPD46OBgYEBgYGAAYEBwYGBgYGBgYGBgcHhoYGBAYGBgAAAAAAAAAY/L23MDAwMDA8NCQ0NDAADAQEBAWFBQWEh'\n        + 'YeHBg4ODweGgIYGBh+25mZmZmZmQABAw9/ABgkWlpaZn5edn5edjwYAADD5348GDx8fHg4ODAwEBAA/vn5+flgEAgMDAg4MEAAAP75+fr6YB'\n        + 'AIDAwIODCAAAAAAAAA/6sDAwsuuuCAAAAAAAAAAP+rVf8GBAAAAAAAAD53d2N7Y29jNjYcCBw2AIUyPXj4xoKQiNhwAAAAAABJMzx4+sSSiN'\n        + 'hwAAAAAAAA/rq6uv7u7u7+urq6/u7u7gD4/P7+fj4AEABUAJIAEAAA+Pz+/n4+AAAoAFQAEAAAAAA4bERERGw4EDh8OAAAADxmZmZmZmY8PB'\n        + 'gYGBgYOBh+YGA8BgZGPDxGBgwMBkY8DAwMfkwsHAx8RgYGfGBgfjxmZmZ8YGI8GBgYGAwGQn48ZmY8PGZmPDxGBj5mZmY8ABgYAAAYGAAACA'\n        + 'gMDP7+///+/gwMCAgAABAQMDB/f///f38wMBAQABAQODh8fP7+ODg4ODg4ODg4ODg4ODg4OP7+fHw4OBAQ');\n\n    const promises: Promise<any>[] = [];\n\n    for (let dir = 0; dir < 2; ++dir) {\n        const flipped = dir === 1;\n\n        // leaves\n        leavesSprites[dir] = new Array<Sprite>(4);\n        for (let i = 0; i < 4; ++i) {\n            createSpriteAndMask(binStr, palette, Offsets.LEAVES0 + 4 * i, Offsets.LEAVESCOLOR, 4, flipped,\n                sprite => leavesSprites[dir][i] = sprite, null, promises);\n        }\n\n        // harry\n        harrySprites[dir] = new Array<Sprite>(8);\n        harryMasks[dir] = new Array<Mask>(8);\n        for (let i = 0; i < 8; ++i) {\n            const j = (i <= 5) ? 5 - i : i;\n            createSpriteAndMask(binStr, palette, Offsets.HARRY0 + 22 * i, \n                    (i === 7) ? Offsets.CLIMBCOLTAB : Offsets.RUNCOLTAB, 22, flipped, \n                    sprite => harrySprites[dir][j] = sprite, mask => harryMasks[dir][j] = mask, promises);\n        }        \n\n        // cobra\n        cobraSprites[dir] = new Array<Sprite>(2);\n        cobraMasks[dir] = new Array<Mask>(2);\n        createSpriteAndMask(binStr, palette, Offsets.COBRA1, Offsets.COBRACOLOR, 16, flipped,\n                sprite => cobraSprites[dir][0] = sprite, mask => cobraMasks[dir][0] = mask, promises);\n        createSpriteAndMask(binStr, palette, Offsets.COBRA0, Offsets.COBRACOLOR, 16, flipped,\n                sprite => cobraSprites[dir][1] = sprite, mask => cobraMasks[dir][1] = mask, promises);\n\n        // croc\n        crocSprites[dir] = new Array<Sprite>(2);\n        createSpriteAndMask(binStr, palette, Offsets.CROCO1, Offsets.CROCOCOLOR, 16, flipped,\n                sprite => crocSprites[dir][0] = sprite, null, promises);\n        createSpriteAndMask(binStr, palette, Offsets.CROCO0, Offsets.CROCOCOLOR, 16, flipped,\n                sprite => crocSprites[dir][1] = sprite, null, promises);\n\n        // sorpion\n        sorpionSprites[dir] = new Array<Sprite>(2);\n        scorpionMasks[dir] = new Array<Mask>(2);\n        createSpriteAndMask(binStr, palette, Offsets.SCORPION1, Offsets.SCORPIONCOLOR, 16, flipped,\n                sprite => sorpionSprites[dir][0] = sprite, mask => scorpionMasks[dir][0] = mask, promises);\n        createSpriteAndMask(binStr, palette, Offsets.SCORPION0, Offsets.SCORPIONCOLOR, 16, flipped,\n                sprite => sorpionSprites[dir][1] = sprite, mask => scorpionMasks[dir][1] = mask, promises);\n    }\n\n    // log\n    createSpriteAndMask(binStr, palette, Offsets.LOG0, Offsets.LOGCOLOR, 16, true,\n            sprite => logSprites[0] = sprite, mask => logMasks[0] = mask, promises);\n    createSpriteAndMask(binStr, palette, Offsets.LOG0, Offsets.LOGCOLOR, 16, false,\n            sprite => logSprites[1] = sprite, mask => logMasks[1] = mask, promises);\n            \n    // fire\n    createSpriteAndMask(binStr, palette, Offsets.FIRE0, Offsets.FIRECOLOR, 16, true,\n            sprite => fireSprites[0] = sprite, mask => fireMasks[0] = mask, promises);\n    createSpriteAndMask(binStr, palette, Offsets.FIRE0, Offsets.FIRECOLOR, 16, false,\n            sprite => fireSprites[1] = sprite, mask => fireMasks[1] = mask, promises);\n\n    // gold\n    createSpriteAndMask(binStr, palette, Offsets.BAR1, Offsets.GOLDBARCOLOR, 16, false,\n            sprite => goldSprites[0] = sprite, mask => goldMasks[0] = mask, promises);\n    createSpriteAndMask(binStr, palette, Offsets.BAR0, Offsets.GOLDBARCOLOR, 16, false,\n            sprite => goldSprites[1] = sprite, mask => goldMasks[1] = mask, promises);\n    \n    // silver\n    createSpriteAndMask(binStr, palette, Offsets.BAR1, Offsets.SILVERBARCOLOR, 16, false,\n            sprite => silverSprites[0] = sprite, mask => silverMasks[0] = mask, promises);\n    createSpriteAndMask(binStr, palette, Offsets.BAR0, Offsets.SILVERBARCOLOR, 16, false,\n            sprite => silverSprites[1] = sprite, mask => silverMasks[1] = mask, promises);\n\n    // money\n    createSpriteAndMask(binStr, palette, Offsets.MONEYBAG, Offsets.MONEYBAGCOLOR, 16, false, \n            sprite => moneySprite = sprite, mask => moneyMask = mask, promises);\n\n    // ring\n    createSpriteAndMask(binStr, palette, Offsets.RING, Offsets.RINGCOLOR, 16, false, sprite => ringSprite = sprite, \n            mask => ringMask = mask, promises);\n\n    // wall\n    createSpriteAndMask(binStr, palette, Offsets.WALL, Offsets.WALLCOLOR, 16, false, sprite => wallSprite = sprite, \n            null, promises);\n\n    // branches\n    createSpriteAndMask(binStr, palette, Offsets.BRANCHES, Offsets.BRANCHESCOLOR, 8, false, \n            sprite => branchesSprite = sprite, null, promises);    \n\n    // characters        \n    for (let color = 0; color < 256; ++color) {        \n        const charCol = palette[color];\n        charSprites[color] = new Array<Sprite>(11);\n        for (let char = 0; char < 11; ++char) {\n            promises.push(createSprite(8, 8, imageData => {\n                const offset = Offsets.ZERO + 8 * (char + 1) - 1;\n                for (let y = 0; y < 8; ++y) {\n                    const byte = binStr.charCodeAt(offset - y);\n                    for (let x = 0, mask = 0x80; x < 8; ++x, mask >>= 1) {\n                        if ((byte & mask) !== 0) {\n                            setColor(imageData, x, y, charCol);\n                        }\n                    }\n                }\n            }).then(({ imageBitmap }) => charSprites[color][char] = imageBitmap));        \n        }\n    }\n\n    // pits\n    const pitColors = [ Colors.BLACK, Colors.BLUE, Colors.MID_YELLOW ];\n    for (let color = 0; color < pitColors.length; ++color) {\n        const pitCol = palette[pitColors[color]];\n        pitSprites[color] = new Array<Sprite>(2);\n        for (let sprite = 0; sprite < 2; ++sprite) {\n            promises.push(createSprite(64, 5, imageData => {\n                for (let y = 0; y < 5; ++y) {\n                    const Y = (sprite === 0) ? 4 - y : y;\n                    const byte = binStr.charCodeAt(Offsets.PIT + y);\n                    for (let x = 0, mask = 0x80, x4 = 0; x < 8; ++x, mask >>= 1, x4 += 4) {\n                        if ((byte & mask) === 0) {\n                            for (let i = 0; i < 4; ++i) {\n                                const X = x4 + i;\n                                setColor(imageData, 31 - X, Y, pitCol);\n                                setColor(imageData, 32 + X, Y, pitCol);\n                            }\n                        }\n                    }\n                }\n            }).then(({ imageBitmap }) => pitSprites[color][sprite] = imageBitmap));\n        }\n    }\n\n    // vines\n    createVineSprites(palette, promises);\n\n    // arrows\n    const arrowColors = [ Colors.OFF_GREEN, Colors.OFF_BLACK ];\n    for (let color = 0; color < arrowColors.length; ++color) {        \n        const arrowCol = palette[arrowColors[color]];\n        arrowSprites[color] = new Array<Sprite>(4);\n        for (let sprite = 0; sprite < 4; ++sprite) {\n            promises.push(createSprite(8, 16, imageData => {\n                const offset = Offsets.ARROWRIGHT + 16 * sprite;\n                for (let y = 0; y < 16; ++y) {\n                    const byte = binStr.charCodeAt(offset + y);\n                    for (let x = 0, mask = 0x80; x < 8; ++x, mask >>= 1) {\n                        if ((byte & mask) !== 0) {\n                            setColor(imageData, x, y, arrowCol);\n                        }\n                    }\n                }\n            }).then(({ imageBitmap }) => arrowSprites[color][sprite] = imageBitmap));\n        }\n    }\n        \n    await Promise.all(promises);\n}\n\nexport function printNumber(ctx: OffscreenCanvasRenderingContext2D, value: number, x: number, y: number, color: number, \n        minDigits = 1) {\n\n    const sprites = charSprites[color];\n    while (value > 0 || minDigits > 0) {\n        ctx.drawImage(sprites[value % 10], x, y);\n        value = Math.floor(value / 10);\n        --minDigits;\n        x -= 8;\n    }\n}","import { exit } from '@/screen';\nimport { GameState } from './game/game-state';\n\nconst ANALOG_STICK_THRESHOLD = 0.5;\n\nexport let leftPressed = false;\nexport let rightPressed = false;\nexport let upPressed = false;\nexport let downPressed = false;\nexport let jumpPressed = false;\n\nexport let leftJustPressed = false;\nexport let rightJustPressed = false;\nexport let upJustPressed = false;\nexport let downJustPressed = false;\nexport let jumpJustPressed = false;\n\nexport let leftJustReleased = false;\nexport let rightJustReleased = false;\nexport let upJustReleased = false;\nexport let downJustReleased = false;\nexport let jumpJustReleased = false;\n\nlet lastLeftPressed = false;\nlet lastRightPressed = false;\nlet lastUpPressed = false;\nlet lastDownPressed = false;\nlet lastJumpPressed = false;\n\nlet leftKeyPressed = 0;\nlet rightKeyPressed = 0;\nlet upKeyPressed = 0;\nlet downKeyPressed = 0;\nlet jumpKeyPressed = false;\n\nlet leftScreenTouched = 0;\nlet rightScreenTouched = 0;\n\nlet hideCursorTimeoutId: number | null = null;\nlet cursorHidden = false;\n\nclass TouchData {\n    timestampDown = 0;\n    xDown = 0;\n    yDown = 0;\n    x = 0;\n    y = 0;\n}\n\nconst touchDatas: Map<number, TouchData> = new Map();\n\nexport function resetInput() {\n    leftKeyPressed = 0;\n    rightKeyPressed = 0;\n    upKeyPressed = 0;\n    downKeyPressed = 0;\n    jumpKeyPressed = false;   \n    leftScreenTouched = 0;\n    rightScreenTouched = 0;\n    touchDatas.clear();\n}\n\n// export function isTouchOnlyDevice(): boolean {\n//     const supportsTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n//     const supportsHover = window.matchMedia('(hover: hover)').matches;\n//     const isCoarsePointer = window.matchMedia('(pointer: coarse)').matches;\n//     return supportsTouch && !supportsHover && isCoarsePointer;\n// }\n\nexport function startInput() {\n    window.addEventListener('click', onClick);\n    window.addEventListener('mousemove', resetHideCursorTimer);\n    window.addEventListener('mouseenter', resetHideCursorTimer);\n    window.addEventListener('mouseleave', cancelHideCursorTimer);\n    resetHideCursorTimer();\n\n    window.addEventListener('touchstart', onTouch, { passive: false });\n    window.addEventListener('touchmove', onTouch, { passive: false });\n    window.addEventListener('touchend', onTouch, { passive: false });\n    window.addEventListener('touchcancel', onTouch, { passive: false });\n\n    window.addEventListener('keydown', onKeyDown);\n    window.addEventListener('keyup', onKeyUp);\n\n    resetInput();   \n}\n\nexport function stopInput() {\n    window.removeEventListener('click', onClick);\n    window.removeEventListener('mousemove', resetHideCursorTimer);\n    window.removeEventListener('mouseenter', resetHideCursorTimer);\n    window.removeEventListener('mouseleave', cancelHideCursorTimer);\n    cancelHideCursorTimer();\n\n    window.removeEventListener('keydown', onKeyDown);\n    window.removeEventListener('keyup', onKeyUp);\n\n    window.removeEventListener('touchstart', onTouch);\n    window.removeEventListener('touchmove', onTouch);\n    window.removeEventListener('touchend', onTouch);\n    window.removeEventListener('touchcancel', onTouch);\n\n    resetInput();\n}\n\nexport function updateInput(gs: GameState) {\n\n    let touchLeft = false;\n    let touchRight = false;\n    let touchUp = false;\n    let touchDown = false;\n    let touchJump = false;\n    if (gs.harry.canStartClimbingUp() && ((rightScreenTouched !== 0 && gs.harry.dir === 0)\n            || (leftScreenTouched !== 0 && gs.harry.dir === 1))) {\n        touchUp = true;\n    } else if (gs.harry.isClimbing()) {\n        if (leftScreenTouched > rightScreenTouched) {\n            if (gs.harry.rightTouchMeansDown) {\n                touchUp = true;\n            } else {\n                touchDown = true;\n            }\n        } else if (rightScreenTouched > leftScreenTouched) {\n            if (gs.harry.rightTouchMeansDown) {\n                touchDown = true;\n            } else {\n                touchUp = true;\n            }\n        }\n    } else if (leftScreenTouched > rightScreenTouched) {\n        if (rightScreenTouched > 0) {\n            touchRight = true;\n            touchJump = true;\n        } else {\n            touchLeft = true;\n        }\n    } else if (rightScreenTouched > leftScreenTouched) {\n        if (leftScreenTouched > 0) {\n            touchLeft = true;\n            touchJump = true;\n        } else {\n            touchRight = true;\n        }\n    }\n\n    let gamepadLeft = false;\n    let gamepadRight = false;\n    let gamepadUp = false;\n    let gamepadDown = false;\n    let gamepadJump = false;\n    const gamepads = navigator.getGamepads();\n    if (gamepads) {        \n        for (let i = gamepads.length - 1; i >= 0; --i) {\n            const gamepad = gamepads[i];\n            if (!gamepad) {\n                continue;            \n            } \n\n            // D-pad left or left bumper or left stick\n            if (gamepad.buttons[14]?.pressed || gamepad.buttons[4]?.pressed || gamepad.buttons[10]?.pressed) {\n                gamepadLeft = true;\n            }\n\n            // D-pad right or right bumper or right stick\n            if (gamepad.buttons[15]?.pressed || gamepad.buttons[5]?.pressed || gamepad.buttons[11]?.pressed) {\n                gamepadRight = true;\n            }\n\n            // D-pad up\n            if (gamepad.buttons[12]?.pressed) {\n                gamepadUp = true;\n            }\n\n            // D-pad down\n            if (gamepad.buttons[13]?.pressed) {\n                gamepadDown = true;\n            }\n\n            // Analog stick left and right\n            const leftStickX  = gamepad.axes[0];\n            const rightStickX  = gamepad.axes[2];\n            if (leftStickX < -ANALOG_STICK_THRESHOLD || rightStickX  < -ANALOG_STICK_THRESHOLD) {\n                gamepadLeft = true;\n            } else if (leftStickX > ANALOG_STICK_THRESHOLD || rightStickX > ANALOG_STICK_THRESHOLD) {\n                gamepadRight = true;\n            }\n\n            // Analog stick up and down\n            const leftStickY  = gamepad.axes[1];\n            const rightStickY  = gamepad.axes[3];\n            if (leftStickY  < -ANALOG_STICK_THRESHOLD || rightStickY < -ANALOG_STICK_THRESHOLD) {\n                gamepadUp = true;\n            } else if (leftStickY > ANALOG_STICK_THRESHOLD || rightStickY > ANALOG_STICK_THRESHOLD) {\n                gamepadDown = true;\n            }\n\n            // Non-directional buttons\n            if (gamepad.buttons[0]?.pressed || gamepad.buttons[1]?.pressed || gamepad.buttons[2]?.pressed \n                    || gamepad.buttons[3]?.pressed || gamepad.buttons[6]?.pressed || gamepad.buttons[7]?.pressed \n                    || gamepad.buttons[8]?.pressed || gamepad.buttons[9]?.pressed) {\n                gamepadJump = true;\n            }\n        }\n    }\n\n    leftPressed = touchLeft || gamepadLeft || leftKeyPressed > rightKeyPressed;\n    rightPressed = touchRight || gamepadRight || rightKeyPressed > leftKeyPressed;\n    upPressed = touchUp || gamepadUp || upKeyPressed > downKeyPressed;\n    downPressed = touchDown || gamepadDown || downKeyPressed > upKeyPressed;\n    jumpPressed = touchJump || gamepadJump || jumpKeyPressed;    \n\n    leftJustPressed = leftPressed && !lastLeftPressed;\n    leftJustReleased = !leftPressed && lastLeftPressed;\n\n    rightJustPressed = rightPressed && !lastRightPressed;\n    rightJustReleased = !rightPressed && lastRightPressed;\n    \n    upJustPressed = upPressed && !lastUpPressed;\n    upJustReleased = !upPressed && lastUpPressed;\n\n    downJustPressed = downPressed && !lastDownPressed;\n    downJustReleased = !downPressed && lastDownPressed;\n\n    jumpJustPressed = jumpPressed && !lastJumpPressed;\n    jumpJustReleased = !jumpPressed && lastJumpPressed;\n\n    lastLeftPressed = leftPressed;\n    lastRightPressed = rightPressed;\n    lastUpPressed = upPressed;\n    lastDownPressed = downPressed;\n    lastJumpPressed = jumpPressed;     \n}\n\nfunction cancelHideCursorTimer() {\n    if (hideCursorTimeoutId !== null) {\n        clearTimeout(hideCursorTimeoutId);\n        hideCursorTimeoutId = null;\n    }\n\n    if (cursorHidden) {\n        document.body.style.cursor = 'default';\n        cursorHidden = false;\n    }\n}\n\nfunction resetHideCursorTimer() {\n    cancelHideCursorTimer();\n\n    hideCursorTimeoutId = window.setTimeout(() => {\n        document.body.style.cursor = 'none';\n        cursorHidden = true;\n    }, 3000);\n}\n\nfunction onTouch(e: TouchEvent) {\n    e.preventDefault();    \n\n    const innerWidth = window.innerWidth;\n    const innerHeight = window.innerHeight;\n    const landscape = innerWidth >= innerHeight;\n\n    for (let i = e.changedTouches.length - 1; i >= 0; --i) {\n        const t = e.changedTouches[i];\n        let x: number;\n        let y: number;\n        if (landscape) {\n            x = t.clientX;\n            y = t.clientY;\n        } else {\n            x = innerHeight - 1 - t.clientY;\n            y = t.clientX;\n        }\n        switch (e.type) {\n            case 'touchstart': {\n                const touchData = new TouchData();\n                touchData.timestampDown = Date.now();\n                touchData.xDown = touchData.x = x;\n                touchData.yDown = touchData.y = y;\n                touchDatas.set(t.identifier, touchData);\n                break;\n            }\n            case 'touchmove': {\n                resetHideCursorTimer();\n                const touchData = touchDatas.get(t.identifier);\n                if (touchData) {\n                    touchData.x = x;\n                    touchData.y = y;\n                }\n                break;\n            }\n            case 'touchend':\n            case 'touchcancel': {\n                const touchData = touchDatas.get(t.identifier);\n                if (touchData) {\n                    if (x < 64 && y < 64 && touchData.xDown < 64 && touchData.yDown < 64) {\n                        exit();\n                    } \n                    touchDatas.delete(t.identifier);\n                }              \n                break;\n            }\n        }\n    }\n    \n    const halfInnerWidth = innerWidth / 2;\n    leftScreenTouched = rightScreenTouched = 0;\n    for (const [ identifier, touchData ] of Array.from(touchDatas)) {\n        if (touchData.x < halfInnerWidth) {\n            leftScreenTouched = touchData.timestampDown;\n        } else {\n            rightScreenTouched = touchData.timestampDown;\n        }\n        outer: {\n            for (let i = e.touches.length - 1; i >= 0; --i) {\n                const t = e.touches[i];\n                if (t.identifier === identifier) {\n                    break outer;\n                }      \n            }\n            touchDatas.delete(identifier);\n        }\n    }\n}\n\nfunction onClick(e: MouseEvent) {\n    if (!(e.clientX && e.clientY)) {\n        return;\n    }\n\n    const innerWidth = window.innerWidth;\n    const innerHeight = window.innerHeight;\n    let x: number;\n    let y: number;\n    if (innerWidth >= innerHeight) {\n        x = e.clientX;\n        y = e.clientY;\n    } else {\n        x = innerHeight - 1 - e.clientY;\n        y = e.clientX;\n    }\n\n    if (x < 64 && y < 64) {\n        exit();\n    }\n}\n\nfunction onKeyDown(e: KeyboardEvent) {\n    switch (e.code) {\n        case 'KeyA':\n        case 'ArrowLeft':\n            leftKeyPressed = rightKeyPressed + 1;\n            break;\n        case 'KeyD':\n        case 'ArrowRight':\n            rightKeyPressed = leftKeyPressed + 1;\n            break;\n        case 'KeyW':\n        case 'ArrowUp':\n            upKeyPressed = downKeyPressed + 1;\n            break;\n        case 'KeyS':\n        case 'ArrowDown':\n            downKeyPressed = upKeyPressed + 1;\n            break;            \n        case 'Escape':\n            exit();\n            break;    \n        default:\n            jumpKeyPressed = true;\n            break;            \n    }\n\n    // touch testing\n    // switch (e.code) {\n    //     case 'KeyA':\n    //         leftScreenTouched = rightScreenTouched + 1;\n    //         break;\n    //     case 'Quote':\n    //         rightScreenTouched = leftScreenTouched + 1;\n    //         break;\n    // }\n}\n\nfunction onKeyUp(e: KeyboardEvent) {\n    switch (e.code) {\n        case 'KeyA':\n        case 'ArrowLeft':\n            leftKeyPressed = 0;\n            break;\n        case 'KeyD':\n        case 'ArrowRight':\n            rightKeyPressed = 0;\n            break;\n        case 'KeyW':\n        case 'ArrowUp':\n            upKeyPressed = 0;\n            break;\n        case 'KeyS':\n        case 'ArrowDown':\n            downKeyPressed = 0;\n            break;                  \n        case 'Escape':\n            break;\n        default:\n            jumpKeyPressed = false;\n            break;            \n    }\n\n    // touch testing\n    // switch (e.code) {\n    //     case 'KeyA':\n    //         leftScreenTouched = 0;\n    //         break;\n    //     case 'Quote':\n    //         rightScreenTouched = 0;\n    //         break;\n    // }    \n}","import { Mask } from './graphics';\n\nexport const TAU = 2 * Math.PI;\n\nexport function clamp(value: number, min: number, max: number) {\n    return (value < min) ? min : (value > max) ? max : value;\n}\n\nexport function mod(n: number, m: number): number {\n    return ((n % m) + m) % m;\n}\n\nexport function spritesIntersect(\n        mask0: Mask, x0: number, y0: number,\n        mask1: Mask, x1: number, y1: number): boolean {\n\n    x0 = Math.floor(x0);\n    y0 = Math.floor(y0);        \n    const width0 = mask0[0].length;\n    const height0 = mask0.length;\n    const xMax0 = width0 - 1;\n    const yMax0 = height0 - 1;\n\n    x1 = Math.floor(x1) - x0;\n    y1 = Math.floor(y1) - y0;    \n    const width1 = mask1[0].length;\n    const height1 = mask1.length;\n    const xMax1 = x1 + width1 - 1;\n    const yMax1 = y1 + height1 - 1;\n    \n    if (yMax1 < 0 || yMax0 < y1 || xMax1 < 0 || xMax0 < x1) {\n        return false;\n    }\n\n    const xMin = Math.max(0, x1);\n    const xMax = Math.min(xMax0, xMax1);\n    const yMin = Math.max(0, y1);\n    const yMax = Math.min(yMax0, yMax1);\n    for (let y = yMin; y <= yMax; ++y) {\n        for (let x = xMin; x <= xMax; ++x) {\n            if (mask0[y][x] && mask1[y - y1][x - x1]) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}","import { download } from \"./download\";\nimport { decodeAudioData, waitForDecodes } from \"./audio\";\nimport { enter as enterStart } from \"./start\";\nimport { loadStore } from \"./store\";\nimport { init as initGraphics } from './graphics';\n\nlet landscape = false;\nlet progressBar: HTMLProgressElement;\n\nexport function enter() {\n    window.addEventListener('resize', windowResized);\n    window.addEventListener('touchmove', onTouchMove, { passive: false });\n\n    const mainElement = document.getElementById('main-content') as HTMLElement;\n    mainElement.innerHTML = `\n            <div id=\"progress-container\">\n                <div id=\"progress-div\">\n                    <progress id=\"loading-progress\" value=\"0\" max=\"100\"></progress>\n                </div>\n            </div>`;\n    progressBar = document.getElementById('loading-progress') as HTMLProgressElement;\n\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.addEventListener('message', messageReceived);\n    }\n\n    windowResized();\n\n    download('resources.zip', frac => {\n        progressBar.value = 100 * frac;\n        setProgressBarColor('#0075FF');\n    }).then(onDownload);\n}\n\nexport function exit() {\n    window.removeEventListener('resize', windowResized);\n    window.removeEventListener('touchmove', onTouchMove);\n\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.removeEventListener('message', messageReceived);\n    }\n}\n\nfunction setProgressBarColor(color: string) {\n\n    if (progressBar) {\n        if (color === progressBar.style.color) {\n            return;\n        }\n        progressBar.style.color = color;\n    }\n\n    const styleId: string = 'progress-bar-style';\n\n    let styleSheet: HTMLStyleElement | null = document.getElementById(styleId) as HTMLStyleElement;\n\n    if (!styleSheet) {\n        styleSheet = document.createElement(\"style\");\n        styleSheet.id = styleId;\n        document.head.appendChild(styleSheet);\n    }\n\n    styleSheet.innerText = `\n        #loading-progress::-webkit-progress-value {\n            background-color: ${color} !important;\n        }\n        #loading-progress::-moz-progress-bar {\n            background-color: ${color} !important;\n        }\n    `;\n}\n\nfunction messageReceived(e: MessageEvent<number>) {\n    if (progressBar) {\n        progressBar.value = 100 * e.data;\n        setProgressBarColor('#48D800');\n    }\n}\n\nfunction onDownload(arrayBuffer: Uint8Array) {\n    import(/* webpackChunkName: \"jszip\" */ 'jszip').then(({ default: JSZip }) => {\n        new JSZip().loadAsync(arrayBuffer).then(zip => Object.entries(zip.files).forEach(entry => {\n            const [ filename, fileData ] = entry;\n            if (fileData.dir) {\n                return;\n            }\n            if (filename.endsWith('.mp3')) {\n                decodeAudioData(filename, fileData);\n            }\n        }));\n    });\n\n    waitForDecodes().then(() => {\n        (document.getElementById('loading-progress') as HTMLProgressElement).value = 100;\n        setTimeout(() => {\n            loadStore();\n            initGraphics().then(() => {\n                exit();\n                enterStart();\n            });\n        }, 10);\n    });\n}\n\nfunction onTouchMove(e: TouchEvent) {\n    e.preventDefault();\n}\n\nfunction windowResized() {\n    const progressContainer = document.getElementById('progress-container') as HTMLDivElement;\n    const progressDiv = document.getElementById('progress-div') as HTMLDivElement;\n\n    progressContainer.style.width = progressContainer.style.height = '';\n    progressContainer.style.left = progressContainer.style.top = '';\n    progressContainer.style.display = 'none';\n\n    progressDiv.style.top = progressDiv.style.left = progressDiv.style.transform = '';\n    progressDiv.style.display = 'none';\n\n    const innerWidth = window.innerWidth;\n    const innerHeight = window.innerHeight;\n    landscape = (innerWidth >= innerHeight);\n\n    progressContainer.style.left = '0px';\n    progressContainer.style.top = '0px';\n    progressContainer.style.width = `${innerWidth}px`;\n    progressContainer.style.height = `${innerHeight}px`;\n    progressContainer.style.display = 'block';\n\n    progressDiv.style.display = 'flex';\n\n    if (landscape) {\n        const rect = progressDiv.getBoundingClientRect();\n        progressDiv.style.left = `${(innerWidth - rect.width) / 2}px`\n        progressDiv.style.top = `${(innerHeight - rect.height) / 2}px`;\n    } else {\n        progressDiv.style.transform = 'rotate(-90deg)';\n        const rect = progressDiv.getBoundingClientRect();\n        progressDiv.style.left = `${(innerWidth - rect.height) / 2}px`\n        progressDiv.style.top = `${(innerHeight - rect.width) / 2}px`;\n    }\n}","import { startAnimation, stopAnimation } from './animate';\nimport { acquireWakeLock, releaseWakeLock } from './wake-lock';\nimport { NoParamVoidFunc } from './no-param-void-func';\nimport { enter as enterStart } from './start';\nimport { PhysicalDimensions, Resolution } from './graphics';\nimport { startInput, stopInput, resetInput } from './input';\nimport { renderScreen, initGame } from './game/game';\nimport { saveStore } from './store';\nimport { stopAll } from './audio';\n\nexport let dpr: number;\n\nlet mainCanvas: HTMLCanvasElement;\nlet mainCtx: CanvasRenderingContext2D | null;\nlet mainCanvasWidth: number;\nlet mainCanvasHeight: number;\n\nlet screenCanvas: OffscreenCanvas;\nlet ctx: OffscreenCanvasRenderingContext2D | null;\n\nlet removeMediaEventListener: NoParamVoidFunc | null = null;\nlet exiting = false;\n\nlet screenWidth: number;\nlet screenHeight: number;\nlet screenX: number;\nlet screenY: number;\n\nfunction updatePixelRatio() {\n    if (removeMediaEventListener !== null) {\n        removeMediaEventListener();\n        removeMediaEventListener = null;\n    }\n\n    if (exiting) {\n        return;\n    }\n\n    const media = matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`);\n    media.addEventListener(\"change\", updatePixelRatio);\n    removeMediaEventListener = () => media.removeEventListener(\"change\", updatePixelRatio);\n\n    onWindowResized();\n};\n\nexport function enter() {\n    exiting = false;\n\n    initGame();\n\n    document.body.style.backgroundColor = '#C2BCB1';\n\n    screenCanvas = new OffscreenCanvas(Resolution.WIDTH, Resolution.HEIGHT);\n    ctx = screenCanvas.getContext('2d');\n\n    const mainElement = document.getElementById(\"main-content\") as HTMLElement;\n    mainElement.innerHTML = `<canvas id=\"main-canvas\" class=\"canvas\" width=\"1\" height=\"1\"></canvas>`;\n    mainCanvas = document.getElementById(\"main-canvas\") as HTMLCanvasElement;\n    mainCanvas.style.touchAction = 'none';\n\n    window.addEventListener('beforeunload', onBeforeUnload);\n    window.addEventListener('resize', onWindowResized);    \n    window.addEventListener('focus', onVisibilityChanged);\n    window.addEventListener('blur', onVisibilityChanged);\n    document.addEventListener('visibilitychange', onVisibilityChanged);\n    \n    acquireWakeLock();\n    updatePixelRatio();\n    startInput();\n    startAnimation();\n}\n\nfunction cleanUp() {\n    if (exiting) {\n        return;\n    }\n\n    exiting = true;\n    stopAnimation();\n    stopInput();\n    stopAll();\n    releaseWakeLock();\n    \n    window.removeEventListener('beforeunload', onBeforeUnload);\n    window.removeEventListener('resize', onWindowResized);    \n    window.removeEventListener('focus', onVisibilityChanged);\n    window.removeEventListener('blur', onVisibilityChanged);\n    document.removeEventListener('visibilitychange', onVisibilityChanged);\n\n    if (removeMediaEventListener !== null) {\n        removeMediaEventListener();\n        removeMediaEventListener = null;\n    }\n\n    saveStore();\n}\n\nexport function exit() {\n    cleanUp();\n    enterStart();\n}\n\nexport function render() {\n    if (!mainCtx) {\n        onWindowResized();\n        return;\n    }\n    if (!ctx) {\n        return;\n    }\n    \n    mainCtx.imageSmoothingEnabled = false;\n    mainCtx.fillStyle = '#0F0F0F';    \n    mainCtx.fillRect(0, 0, mainCanvasWidth, mainCanvasHeight);\n\n    ctx.imageSmoothingEnabled = false;\n    renderScreen(ctx);\n\n    mainCtx.drawImage(screenCanvas, screenX, screenY, screenWidth, screenHeight);\n\n    // hamburger icon\n    mainCtx.imageSmoothingEnabled = true;\n    mainCtx.fillStyle = '#FFFFFF';    \n    mainCtx.fillRect(27, 21, 18, 1);\n    mainCtx.fillRect(27, 27, 18, 1);\n    mainCtx.fillRect(27, 33, 18, 1);\n}\n\nfunction onWindowResized() {\n\n    if (exiting) {\n        return;\n    }\n\n    mainCtx = null;\n    mainCanvas = document.getElementById(\"main-canvas\") as HTMLCanvasElement;\n    mainCanvas.style.display = 'none';\n\n    const innerWidth = window.innerWidth;\n    const innerHeight = window.innerHeight;\n\n    mainCanvas.style.display = 'block';\n    mainCanvas.style.width = `${innerWidth}px`;\n    mainCanvas.style.height = `${innerHeight}px`;    \n    mainCanvas.style.position = 'absolute';\n    mainCanvas.style.left = '0px';\n    mainCanvas.style.top = '0px';\n\n    dpr = window.devicePixelRatio || 1;\n    mainCanvas.width = Math.floor(dpr * innerWidth);\n    mainCanvas.height = Math.floor(dpr * innerHeight);\n\n    const transform = new DOMMatrix();\n    if (innerWidth >= innerHeight) {\n        // Landscape mode\n        mainCanvasWidth = innerWidth;\n        mainCanvasHeight = innerHeight;\n        transform.a = transform.d = dpr;\n        transform.b = transform.c = transform.e = transform.f = 0;\n    } else {\n        // Portrait mode\n        mainCanvasWidth = innerHeight;\n        mainCanvasHeight = innerWidth;\n        transform.a = transform.d = transform.e = 0;\n        transform.c = dpr;\n        transform.b = -transform.c;        \n        transform.f = dpr * innerHeight;\n    }\n\n    mainCtx = mainCanvas.getContext('2d');\n    if (!mainCtx) {\n        return;\n    }\n    mainCtx.setTransform(transform);\n\n    screenHeight = mainCanvasHeight;\n    screenWidth = screenHeight * PhysicalDimensions.WIDTH / PhysicalDimensions.HEIGHT;\n    if (screenWidth > mainCanvasWidth) {\n        screenWidth = mainCanvasWidth;\n        screenHeight = screenWidth * PhysicalDimensions.HEIGHT / PhysicalDimensions.WIDTH;\n        screenX = 0;\n        screenY = Math.round((mainCanvasHeight - screenHeight) / 2);\n    } else {\n        screenX = Math.round((mainCanvasWidth - screenWidth) / 2);\n        screenY = 0;\n    }\n\n    render();\n}\n\nfunction onVisibilityChanged() {\n    if (!exiting && document.visibilityState === 'visible' && document.hasFocus()) {\n        acquireWakeLock();\n        resetInput();\n        startAnimation();        \n    } else {\n        stopAnimation();\n        stopAll();\n    }\n}\n\nfunction onBeforeUnload() {\n    cleanUp();    \n}","import { setVolume } from './audio';\nimport { enter as enterGame } from './screen';\nimport { store, saveStore, Difficulty } from './store';\n\nlet landscape = false;\n\nlet dropdownToggleListener: () => void;\nlet dropdownCloseListener: (event: MouseEvent) => void;\nconst optionListners = new Array<() => void>(3);\nlet selectedDifficulty: number;\n\nexport function enter() {\n    selectedDifficulty = store.difficulty;\n\n    document.body.style.backgroundColor = '#0F0F0F';\n\n    window.addEventListener('resize', windowResized);\n    window.addEventListener('touchmove', onTouchMove, { passive: false });\n\n    const mainElement = document.getElementById('main-content') as HTMLElement;\n    mainElement.innerHTML = `\n            <div id=\"start-container\">\n                <div id=\"start-div\">\n                    <div id=\"high-score-div\">High Score: ${store.highScores[selectedDifficulty]}</div>\n                    <div class=\"volume-div\">\n                        <span class=\"left-volume-label material-icons\" id=\"left-volume-span\" \n                                lang=\"en\">volume_mute</span>\n                        <input type=\"range\" id=\"volume-input\" min=\"0\" max=\"100\" step=\"any\" value=\"10\">\n                        <span class=\"right-volume-label\" id=\"right-volume-span\" lang=\"en\">100</span>\n                    </div>\n                    <div class=\"difficulty-div\">\n                        <div id=\"dropdown-label\">Difficulty:</div>\n                        <div id=\"custom-dropdown\" class=\"custom-dropdown\">\n                            <div class=\"dropdown-selected\">${getDifficultyName()}</div>\n                            <div class=\"dropdown-options\">\n                                <div class=\"dropdown-option\" data-value=\"0\">Easy</div>\n                                <div class=\"dropdown-option\" data-value=\"1\">Normal</div>\n                                <div class=\"dropdown-option\" data-value=\"2\">Hard</div>\n                            </div>\n                        </div>    \n                    </div>    \n                    <div id=\"go-div\">${store.gameState \n                        ? '<button id=\"start-button\">New Game</button><button id=\"continue-button\">Continue</button>' \n                        : '<button id=\"start-button\">Start</button>'}\n                    </div>\n                </div>\n            </div>`;\n\n    const highScore = document.getElementById('high-score-div') as HTMLDivElement;\n\n    setVolume(store.volume);\n    const volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n    volumeInput.addEventListener('input', volumeChanged);\n    volumeInput.value = String(store.volume);\n\n    const startButton = document.getElementById('start-button') as HTMLButtonElement;\n    startButton.addEventListener('click', startButtonClicked);\n\n    const continueButton = document.getElementById('continue-button') as HTMLButtonElement | null;\n    continueButton?.addEventListener('click', continueButtonClicked);\n\n    const dropdown = document.getElementById('custom-dropdown') as HTMLDivElement;\n    const selected = dropdown.querySelector('.dropdown-selected') as HTMLDivElement;\n    const optionItems = dropdown.querySelectorAll('.dropdown-option');\n\n    // Toggle dropdown open/closed on click\n    dropdownToggleListener = () => dropdown.classList.toggle('open');\n    selected.addEventListener('click', dropdownToggleListener);\n\n    // Close if clicked outside\n    dropdownCloseListener = event => {\n        if (!dropdown.contains(event.target as Node)) {\n            dropdown.classList.remove('open');\n        }\n    };\n    document.addEventListener('click', dropdownCloseListener);\n\n    // Handle clicks on each option\n    optionItems.forEach(option => {\n        const difficulty = Number(option.getAttribute('data-value'));\n        optionListners[difficulty] = () => {\n            selectedDifficulty = difficulty;\n            highScore.textContent = `High Score: ${store.highScores[selectedDifficulty]}`;\n            selected.textContent = option.textContent; // Update the \"selected\" text            \n            dropdown.classList.remove('open');         // Close dropdown\n        };\n        option.addEventListener('click', optionListners[difficulty]);\n    });\n\n    windowResized();\n}\n\nexport function exit() {\n    window.removeEventListener('resize', windowResized);\n    window.removeEventListener('touchmove', onTouchMove);\n\n    const volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n    volumeInput.removeEventListener('input', volumeChanged);\n\n    const startButton = document.getElementById('start-button') as HTMLButtonElement;\n    startButton.removeEventListener('click', startButtonClicked);\n\n    const continueButton = document.getElementById('continue-button') as HTMLButtonElement | null;\n    continueButton?.removeEventListener('click', continueButtonClicked);    \n\n    const dropdown = document.getElementById('custom-dropdown') as HTMLDivElement;\n    document.removeEventListener('click', dropdownCloseListener);\n    \n    const selected = dropdown.querySelector('.dropdown-selected') as HTMLDivElement;\n    selected.removeEventListener('click', dropdownToggleListener);   \n\n    const optionItems = dropdown.querySelectorAll('.dropdown-option');\n    optionItems.forEach(option => option.removeEventListener('click', \n            optionListners[Number(option.getAttribute('data-value'))]));\n    \n    saveStore();\n}\n\nfunction getDifficultyName() {\n    switch (store.difficulty) {\n        case Difficulty.EASY:\n            return \"Easy\";\n        case Difficulty.NORMAL:\n            return \"Normal\";\n        default:\n            return \"Hard\";\n    }\n}\n\nfunction startButtonClicked() {\n    store.gameState = undefined;\n    store.difficulty = selectedDifficulty;\n    continueButtonClicked();\n}\n\nfunction continueButtonClicked() {\n    setVolume(store.volume);    \n    exit();\n    enterGame();\n}\n\nfunction onTouchMove(e: TouchEvent) {\n    let target = e.target as HTMLElement | null;\n    while (target !== null) {\n        if (target.id === 'volume-input') {\n            if (landscape) {\n                return;\n            }\n\n            const volumeInput = target as HTMLInputElement;\n            const max = parseFloat(volumeInput.max);\n            const min = parseFloat(volumeInput.min);\n            const rect = volumeInput.getBoundingClientRect();\n            const value = (1 - ((e.touches[0].clientY - rect.top) / rect.height)) * (max - min) + min;\n            volumeInput.value = value.toString();\n            volumeInput.dispatchEvent(new Event('input'));\n            return;\n        }\n        target = target.parentElement;\n    }\n    e.preventDefault();\n}\n\nfunction volumeChanged() {\n    const leftVolumeSpan = document.getElementById('left-volume-span') as HTMLSpanElement;\n    const volumeInput = document.getElementById('volume-input') as HTMLInputElement;\n    const rightVolumeSpan = document.getElementById('right-volume-span') as HTMLSpanElement;\n\n    store.volume = 100 * (+volumeInput.value - +volumeInput.min) / (+volumeInput.max - +volumeInput.min);\n    volumeInput.style.setProperty('--thumb-position', `${store.volume}%`);\n\n    if (store.volume === 0) {\n        leftVolumeSpan.textContent = 'volume_off';\n    } else if (store.volume < 33) {\n        leftVolumeSpan.textContent = 'volume_mute';\n    } else if (store.volume < 66) {\n        leftVolumeSpan.textContent = 'volume_down';\n    } else {\n        leftVolumeSpan.textContent = 'volume_up';\n    }\n\n    rightVolumeSpan.textContent = String(Math.round(store.volume));\n}\n\nfunction windowResized() {\n    const startContainer = document.getElementById('start-container') as HTMLDivElement;\n    const startDiv = document.getElementById('start-div') as HTMLDivElement;\n    const leftVolumeSpan = document.getElementById('left-volume-span') as HTMLSpanElement;\n    const rightVolumeSpan = document.getElementById('right-volume-span') as HTMLSpanElement;\n\n    startContainer.style.width = startContainer.style.height = '';\n    startContainer.style.left = startContainer.style.top = '';\n    startContainer.style.display = 'none';\n\n    startDiv.style.left = startDiv.style.top = startDiv.style.transform = '';\n    startDiv.style.display = 'none';\n\n    const innerWidth = window.innerWidth;\n    const innerHeight = window.innerHeight;\n    landscape = (innerWidth >= innerHeight);\n\n    startContainer.style.left = '0px';\n    startContainer.style.top = '0px';\n    startContainer.style.width = `${innerWidth}px`;\n    startContainer.style.height = `${innerHeight}px`;\n    startContainer.style.display = 'block';\n\n    startDiv.style.display = 'flex';\n\n    leftVolumeSpan.style.width = '';\n    leftVolumeSpan.style.display = 'inline-block';\n    leftVolumeSpan.style.textAlign = 'center';\n    leftVolumeSpan.textContent = '\\u{1F507}';\n    leftVolumeSpan.style.transform = '';\n\n    rightVolumeSpan.style.width = '';\n    rightVolumeSpan.style.display = 'inline-block';\n    rightVolumeSpan.style.textAlign = 'center';\n    rightVolumeSpan.textContent = '100';\n\n    if (landscape) {\n        const leftVolumeSpanWidth = leftVolumeSpan.getBoundingClientRect().width;\n        leftVolumeSpan.style.width = `${leftVolumeSpanWidth}px`;\n\n        const rightVolumeSpanWidth = rightVolumeSpan.getBoundingClientRect().width;\n        rightVolumeSpan.style.width = `${rightVolumeSpanWidth}px`;\n\n        const rect = startDiv.getBoundingClientRect();\n        startDiv.style.left = `${(innerWidth - rect.width) / 2}px`\n        startDiv.style.top = `${(innerHeight - rect.height) / 2}px`;\n    } else {\n        const leftVolumeSpanHeight = leftVolumeSpan.getBoundingClientRect().height;\n        leftVolumeSpan.style.width = `${leftVolumeSpanHeight}px`;\n\n        const rightVolumeSpanHeight = rightVolumeSpan.getBoundingClientRect().height;\n        rightVolumeSpan.style.width = `${rightVolumeSpanHeight}px`;\n\n        startDiv.style.transform = 'rotate(-90deg)';\n        const rect = startDiv.getBoundingClientRect();\n        startDiv.style.left = `${(innerWidth - rect.height) / 2}px`\n        startDiv.style.top = `${(innerHeight - rect.width) / 2}px`;\n    }\n    rightVolumeSpan.textContent = String(store.volume);\n\n    volumeChanged();\n}","import { GameState } from './game/game-state';\n\nexport const LOCAL_STORAGE_KEY = 'pitfall-store';\n\nexport enum Difficulty {\n    EASY = 0,\n    NORMAL = 1,\n    HARD = 2,\n}\n\nexport class Store {\n    highScores = [ 0, 0, 0];  \n    volume = 10;\n    difficulty = 0;\n    gameState: GameState | undefined = undefined;\n}\n\nexport let store: Store;\n\nexport function saveStore() {\n    if (store.gameState?.gameOver) {\n        store.gameState = undefined;\n    }\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(store));\n}\n\nexport function loadStore() {\n    if (store) {\n        return;\n    }\n\n    const str = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (str) {\n        try {\n            store = JSON.parse(str) as Store;\n            store.gameState = (store.gameState && !store.gameState.gameOver) \n                    ? new GameState(store.gameState) : undefined;\n        } catch {\n            store = new Store();\n        }\n    } else {\n        store = new Store();\n    }\n}","let wakeLock: WakeLockSentinel | null = null;\nlet acquiringWaitLock = false;\n\nexport function acquireWakeLock() {\n    if (!acquiringWaitLock && wakeLock === null && 'wakeLock' in navigator) {\n        acquiringWaitLock = true;\n        navigator.wakeLock.request('screen')\n            .then(w => {\n                if (acquiringWaitLock) {\n                    wakeLock = w;\n                    wakeLock.addEventListener(\"release\", () => {\n                        if (!acquiringWaitLock) {\n                            wakeLock = null;\n                        }\n                    });\n                }\n            }).catch(_ => {\n        }).finally(() => acquiringWaitLock = false);\n    }\n}\n\nexport function releaseWakeLock() {\n    if (wakeLock !== null && 'wakeLock' in navigator) {\n        acquiringWaitLock = false;\n        wakeLock.release()\n            .then(() => {\n                if (!acquiringWaitLock) {\n                    wakeLock = null;\n                }\n            }).catch(_ => {\n        });\n    }\n}"],"names":[],"sourceRoot":""}